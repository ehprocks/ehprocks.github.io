import require$$0, { useState, useEffect } from 'react';

var classnames$1 = {exports: {}};

/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/

(function (module) {
/* global define */

(function () {

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if (module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else {
		window.classNames = classNames;
	}
}());
}(classnames$1));

var classnames = classnames$1.exports;

var index = '';

var jsxRuntime = {exports: {}};

var reactJsxRuntime_production_min = {};

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f=require$$0,g=60103;reactJsxRuntime_production_min.Fragment=60107;if("function"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element");reactJsxRuntime_production_min.Fragment=h("react.fragment");}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};
function q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=""+k);void 0!==a.key&&(e=""+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return {$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}reactJsxRuntime_production_min.jsx=q;reactJsxRuntime_production_min.jsxs=q;

{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}

const jsx = jsxRuntime.exports.jsx;
const jsxs = jsxRuntime.exports.jsxs;

function DiscordInvite({
  guild,
  palette = "dark",
  flat = false
}) {
  const initialState = {
    id: "",
    name: "Loading...",
    owner: "",
    ownerId: "",
    verified: false,
    memberCount: "\u2205",
    memberOnline: "\u2205",
    bannerURL: null,
    iconURL: "https://steamuserimages-a.akamaihd.net/ugc/961973556167374789/672A76928C54C3E57E081E0EB9E9A752B18B1778/",
    inviteCodes: []
  };
  const [state, setState] = useState({
    offline: false,
    error: false,
    ...initialState
  });
  function fetchState() {
    fetch(`https://api.joshmerlino.me/v2/discord-invite-react/${guild}`).then((r) => r.json()).then(setState).catch(() => setState({
      ...state,
      offline: true
    }));
  }
  useEffect(function() {
    const iv = setInterval(fetchState, 5e3);
    fetchState();
    return () => clearInterval(iv);
  }, []);
  function invite() {
    window.open("https://discord.com/api/oauth2/authorize?client_id=955128562455838791&permissions=8&scope=bot");
  }
  if (state && "error" in state && state.error)
    return /* @__PURE__ */ jsxs("div", {
      className: classnames("ReactDiscordInvite--root", `palette-${palette}`, {
        flat
      }),
      children: [/* @__PURE__ */ jsx("h5", {
        className: "ReactDiscordInvite--title !text-red-500",
        children: "You've been invited to join a server"
      }), /* @__PURE__ */ jsxs("div", {
        className: "ReactDiscordInvite--datalayer",
        children: [/* @__PURE__ */ jsx("img", {
          className: "ReactDiscordInvite--servericon",
          src: initialState.iconURL
        }), /* @__PURE__ */ jsxs("div", {
          className: "ReactDiscordInvite--textlayer",
          children: [/* @__PURE__ */ jsx("div", {
            className: "ReactDiscordInvite--servername",
            children: "Not reporting metrics"
          }), /* @__PURE__ */ jsx("strong", {
            className: "ReactDiscordInvite--membercount",
            children: "Invite our bot to get started"
          })]
        }), /* @__PURE__ */ jsx("a", {
          className: "ReactDiscordInvite--joinlink ReactDiscordInvite--botinvite",
          onClick: invite,
          children: "Invite Bot"
        })]
      })]
    });
  return /* @__PURE__ */ jsxs("div", {
    className: ["ReactDiscordInvite--root", `palette-${palette}`].join(" "),
    children: [/* @__PURE__ */ jsx("h5", {
      className: "ReactDiscordInvite--title",
      children: "You've been invited to join a server"
    }), /* @__PURE__ */ jsxs("div", {
      className: "ReactDiscordInvite--datalayer",
      children: [/* @__PURE__ */ jsx("img", {
        className: "ReactDiscordInvite--servericon",
        src: state.iconURL
      }), /* @__PURE__ */ jsxs("div", {
        className: "ReactDiscordInvite--textlayer",
        children: [/* @__PURE__ */ jsx("div", {
          className: "ReactDiscordInvite--servername",
          children: state.name
        }), /* @__PURE__ */ jsxs("strong", {
          className: "ReactDiscordInvite--membercount",
          children: [/* @__PURE__ */ jsxs("span", {
            children: [state.memberOnline, " Online"]
          }), /* @__PURE__ */ jsxs("span", {
            children: [state.memberCount, " Members"]
          })]
        })]
      }), state.inviteCodes.length > 0 && /* @__PURE__ */ jsx("a", {
        className: "ReactDiscordInvite--joinlink",
        href: state.id === "" ? void 0 : `//discord.gg/${state.inviteCodes[0]}`,
        children: "Join"
      })]
    })]
  });
}

export { DiscordInvite as default };
//# sourceMappingURL=index.js.map
