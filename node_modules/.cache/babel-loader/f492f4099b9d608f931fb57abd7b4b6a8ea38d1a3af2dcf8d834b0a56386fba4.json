{"ast":null,"code":"import { useMediaQuery } from \"./chunk-MG6WC47T.mjs\";\n\n// src/use-breakpoint.ts\nimport { useTheme } from \"@chakra-ui/system\";\nimport { isObject } from \"@chakra-ui/shared-utils\";\nfunction useBreakpoint(arg) {\n  var _a, _b;\n  var opts = isObject(arg) ? arg : {\n    fallback: arg != null ? arg : \"base\"\n  };\n  var theme = useTheme();\n  var breakpoints = theme.__breakpoints.details.map(function (_ref) {\n    var minMaxQuery = _ref.minMaxQuery,\n      breakpoint = _ref.breakpoint;\n    return {\n      breakpoint: breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n  var fallback = breakpoints.map(function (bp) {\n    return bp.breakpoint === opts.fallback;\n  });\n  var values = useMediaQuery(breakpoints.map(function (bp) {\n    return bp.query;\n  }), {\n    fallback: fallback,\n    ssr: opts.ssr\n  });\n  var index = values.findIndex(function (value) {\n    return value == true;\n  });\n  return (_b = (_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) != null ? _b : opts.fallback;\n}\nexport { useBreakpoint };","map":{"version":3,"names":["useMediaQuery","useTheme","isObject","useBreakpoint","arg","_a","_b","opts","fallback","theme","breakpoints","__breakpoints","details","map","_ref","minMaxQuery","breakpoint","query","replace","bp","values","ssr","index","findIndex","value"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/media-query/dist/chunk-CI3LDA6F.mjs"],"sourcesContent":["import {\n  useMediaQuery\n} from \"./chunk-MG6WC47T.mjs\";\n\n// src/use-breakpoint.ts\nimport { useTheme } from \"@chakra-ui/system\";\nimport { isObject } from \"@chakra-ui/shared-utils\";\nfunction useBreakpoint(arg) {\n  var _a, _b;\n  const opts = isObject(arg) ? arg : { fallback: arg != null ? arg : \"base\" };\n  const theme = useTheme();\n  const breakpoints = theme.__breakpoints.details.map(\n    ({ minMaxQuery, breakpoint }) => ({\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    })\n  );\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(\n    breakpoints.map((bp) => bp.query),\n    { fallback, ssr: opts.ssr }\n  );\n  const index = values.findIndex((value) => value == true);\n  return (_b = (_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) != null ? _b : opts.fallback;\n}\n\nexport {\n  useBreakpoint\n};\n"],"mappings":"AAAA,SACEA,aAAa,QACR,sBAAsB;;AAE7B;AACA,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC1B,IAAIC,EAAE,EAAEC,EAAE;EACV,IAAMC,IAAI,GAAGL,QAAQ,CAACE,GAAG,CAAC,GAAGA,GAAG,GAAG;IAAEI,QAAQ,EAAEJ,GAAG,IAAI,IAAI,GAAGA,GAAG,GAAG;EAAO,CAAC;EAC3E,IAAMK,KAAK,GAAGR,QAAQ,EAAE;EACxB,IAAMS,WAAW,GAAGD,KAAK,CAACE,aAAa,CAACC,OAAO,CAACC,GAAG,CACjD,UAAAC,IAAA;IAAA,IAAGC,WAAW,GAAAD,IAAA,CAAXC,WAAW;MAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAA,OAAQ;MAChCA,UAAU,EAAVA,UAAU;MACVC,KAAK,EAAEF,WAAW,CAACG,OAAO,CAAC,oBAAoB,EAAE,EAAE;IACrD,CAAC;EAAA,CAAC,CACH;EACD,IAAMV,QAAQ,GAAGE,WAAW,CAACG,GAAG,CAAC,UAACM,EAAE;IAAA,OAAKA,EAAE,CAACH,UAAU,KAAKT,IAAI,CAACC,QAAQ;EAAA,EAAC;EACzE,IAAMY,MAAM,GAAGpB,aAAa,CAC1BU,WAAW,CAACG,GAAG,CAAC,UAACM,EAAE;IAAA,OAAKA,EAAE,CAACF,KAAK;EAAA,EAAC,EACjC;IAAET,QAAQ,EAARA,QAAQ;IAAEa,GAAG,EAAEd,IAAI,CAACc;EAAI,CAAC,CAC5B;EACD,IAAMC,KAAK,GAAGF,MAAM,CAACG,SAAS,CAAC,UAACC,KAAK;IAAA,OAAKA,KAAK,IAAI,IAAI;EAAA,EAAC;EACxD,OAAO,CAAClB,EAAE,GAAG,CAACD,EAAE,GAAGK,WAAW,CAACY,KAAK,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGjB,EAAE,CAACW,UAAU,KAAK,IAAI,GAAGV,EAAE,GAAGC,IAAI,CAACC,QAAQ;AACvG;AAEA,SACEL,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}