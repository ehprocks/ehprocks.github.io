{"ast":null,"code":"import _defineProperty from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// src/use-checkbox-group.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { useCallback } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useCheckboxGroup() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultValue = props.defaultValue,\n    valueProp = props.value,\n    onChange = props.onChange,\n    isDisabled = props.isDisabled,\n    isNative = props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n  var _useControllableState = useControllableState({\n      value: valueProp,\n      defaultValue: defaultValue || [],\n      onChange: onChangeProp\n    }),\n    _useControllableState2 = _slicedToArray(_useControllableState, 2),\n    value = _useControllableState2[0],\n    setValue = _useControllableState2[1];\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? [].concat(_toConsumableArray(value), [selectedValue]) : value.filter(function (v) {\n      return String(v) !== String(selectedValue);\n    });\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function () {\n    var _objectSpread2;\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _objectSpread(_objectSpread({}, props2), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, checkedKey, value.some(function (val) {\n      return String(props2.value) === String(val);\n    })), _defineProperty(_objectSpread2, \"onChange\", handleChange), _objectSpread2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\nexport { useCheckboxGroup };","map":{"version":3,"names":["useCallbackRef","useControllableState","isObject","useCallback","isInputEvent","value","target","useCheckboxGroup","props","arguments","length","undefined","defaultValue","valueProp","onChange","isDisabled","isNative","onChangeProp","_useControllableState","_useControllableState2","_slicedToArray","setValue","handleChange","eventOrValue","isChecked","checked","includes","selectedValue","nextValue","concat","_toConsumableArray","filter","v","String","getCheckboxProps","_objectSpread2","props2","checkedKey","_objectSpread","_defineProperty","some","val"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/checkbox/dist/chunk-5F7ST2TT.mjs"],"sourcesContent":["// src/use-checkbox-group.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { useCallback } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useCheckboxGroup(props = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = useCallback(\n    (eventOrValue) => {\n      if (!value)\n        return;\n      const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n      const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      const nextValue = isChecked ? [...value, selectedValue] : value.filter((v) => String(v) !== String(selectedValue));\n      setValue(nextValue);\n    },\n    [setValue, value]\n  );\n  const getCheckboxProps = useCallback(\n    (props2 = {}) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        [checkedKey]: value.some((val) => String(props2.value) === String(val)),\n        onChange: handleChange\n      };\n    },\n    [handleChange, isNative, value]\n  );\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\nexport {\n  useCheckboxGroup\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}