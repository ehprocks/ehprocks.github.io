{"ast":null,"code":"import _slicedToArray from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// src/use-id.ts\nimport { useCallback, useId as useReactId, useMemo, useState } from \"react\";\nfunction useId(idProp, prefix) {\n  var id = useReactId();\n  return useMemo(function () {\n    return idProp || [prefix, id].filter(Boolean).join(\"-\");\n  }, [idProp, prefix, id]);\n}\nfunction useIds(idProp) {\n  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    prefixes[_key - 1] = arguments[_key];\n  }\n  var id = useId(idProp);\n  return useMemo(function () {\n    return prefixes.map(function (prefix) {\n      return \"\".concat(prefix, \"-\").concat(id);\n    });\n  }, [id, prefixes]);\n}\nfunction useOptionalPart(partId) {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    id = _useState2[0],\n    setId = _useState2[1];\n  var ref = useCallback(function (node) {\n    setId(node ? partId : null);\n  }, [partId]);\n  return {\n    ref: ref,\n    id: id,\n    isRendered: Boolean(id)\n  };\n}\nexport { useId, useIds, useOptionalPart };","map":{"version":3,"names":["useCallback","useId","useReactId","useMemo","useState","idProp","prefix","id","filter","Boolean","join","useIds","_len","arguments","length","prefixes","Array","_key","map","concat","useOptionalPart","partId","_useState","_useState2","_slicedToArray","setId","ref","node","isRendered"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/hooks/dist/chunk-EGV7XMQK.mjs"],"sourcesContent":["// src/use-id.ts\nimport { useCallback, useId as useReactId, useMemo, useState } from \"react\";\nfunction useId(idProp, prefix) {\n  const id = useReactId();\n  return useMemo(\n    () => idProp || [prefix, id].filter(Boolean).join(\"-\"),\n    [idProp, prefix, id]\n  );\n}\nfunction useIds(idProp, ...prefixes) {\n  const id = useId(idProp);\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`);\n  }, [id, prefixes]);\n}\nfunction useOptionalPart(partId) {\n  const [id, setId] = useState(null);\n  const ref = useCallback(\n    (node) => {\n      setId(node ? partId : null);\n    },\n    [partId]\n  );\n  return { ref, id, isRendered: Boolean(id) };\n}\n\nexport {\n  useId,\n  useIds,\n  useOptionalPart\n};\n"],"mappings":";AAAA;AACA,SAASA,WAAW,EAAEC,KAAK,IAAIC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3E,SAASH,KAAKA,CAACI,MAAM,EAAEC,MAAM,EAAE;EAC7B,IAAMC,EAAE,GAAGL,UAAU,EAAE;EACvB,OAAOC,OAAO,CACZ;IAAA,OAAME,MAAM,IAAI,CAACC,MAAM,EAAEC,EAAE,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAAA,GACtD,CAACL,MAAM,EAAEC,MAAM,EAAEC,EAAE,CAAC,CACrB;AACH;AACA,SAASI,MAAMA,CAACN,MAAM,EAAe;EAAA,SAAAO,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAVC,QAAQ,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAARF,QAAQ,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EACjC,IAAMV,EAAE,GAAGN,KAAK,CAACI,MAAM,CAAC;EACxB,OAAOF,OAAO,CAAC,YAAM;IACnB,OAAOY,QAAQ,CAACG,GAAG,CAAC,UAACZ,MAAM;MAAA,UAAAa,MAAA,CAAQb,MAAM,OAAAa,MAAA,CAAIZ,EAAE;IAAA,CAAE,CAAC;EACpD,CAAC,EAAE,CAACA,EAAE,EAAEQ,QAAQ,CAAC,CAAC;AACpB;AACA,SAASK,eAAeA,CAACC,MAAM,EAAE;EAC/B,IAAAC,SAAA,GAAoBlB,QAAQ,CAAC,IAAI,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3Bf,EAAE,GAAAgB,UAAA;IAAEE,KAAK,GAAAF,UAAA;EAChB,IAAMG,GAAG,GAAG1B,WAAW,CACrB,UAAC2B,IAAI,EAAK;IACRF,KAAK,CAACE,IAAI,GAAGN,MAAM,GAAG,IAAI,CAAC;EAC7B,CAAC,EACD,CAACA,MAAM,CAAC,CACT;EACD,OAAO;IAAEK,GAAG,EAAHA,GAAG;IAAEnB,EAAE,EAAFA,EAAE;IAAEqB,UAAU,EAAEnB,OAAO,CAACF,EAAE;EAAE,CAAC;AAC7C;AAEA,SACEN,KAAK,EACLU,MAAM,EACNS,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}