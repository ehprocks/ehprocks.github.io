{"ast":null,"code":"import { useUpdateEffect } from \"./chunk-5AOLTBA4.mjs\";\n\n// src/use-focus-on-hide.ts\nimport { contains, focus, getActiveElement, isTabbable } from \"@chakra-ui/utils\";\nfunction preventReturnFocus(containerRef) {\n  var el = containerRef.current;\n  if (!el) return false;\n  var activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (contains(el, activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  var shouldFocusProp = options.shouldFocus,\n    visible = options.visible,\n    focusRef = options.focusRef;\n  var shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(function () {\n    if (!shouldFocus) return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    var el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    if (el) {\n      focus(el, {\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\nexport { useFocusOnHide };","map":{"version":3,"names":["useUpdateEffect","contains","focus","getActiveElement","isTabbable","preventReturnFocus","containerRef","el","current","activeElement","useFocusOnHide","options","shouldFocusProp","shouldFocus","visible","focusRef","nextTick"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/hooks/dist/chunk-H54GS5SN.mjs"],"sourcesContent":["import {\n  useUpdateEffect\n} from \"./chunk-5AOLTBA4.mjs\";\n\n// src/use-focus-on-hide.ts\nimport {\n  contains,\n  focus,\n  getActiveElement,\n  isTabbable\n} from \"@chakra-ui/utils\";\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el)\n    return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement)\n    return false;\n  if (contains(el, activeElement))\n    return false;\n  if (isTabbable(activeElement))\n    return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus)\n      return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    if (el) {\n      focus(el, { nextTick: true });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\n\nexport {\n  useFocusOnHide\n};\n"],"mappings":"AAAA,SACEA,eAAe,QACV,sBAAsB;;AAE7B;AACA,SACEC,QAAQ,EACRC,KAAK,EACLC,gBAAgB,EAChBC,UAAU,QACL,kBAAkB;AACzB,SAASC,kBAAkBA,CAACC,YAAY,EAAE;EACxC,IAAMC,EAAE,GAAGD,YAAY,CAACE,OAAO;EAC/B,IAAI,CAACD,EAAE,EACL,OAAO,KAAK;EACd,IAAME,aAAa,GAAGN,gBAAgB,CAACI,EAAE,CAAC;EAC1C,IAAI,CAACE,aAAa,EAChB,OAAO,KAAK;EACd,IAAIR,QAAQ,CAACM,EAAE,EAAEE,aAAa,CAAC,EAC7B,OAAO,KAAK;EACd,IAAIL,UAAU,CAACK,aAAa,CAAC,EAC3B,OAAO,IAAI;EACb,OAAO,KAAK;AACd;AACA,SAASC,cAAcA,CAACJ,YAAY,EAAEK,OAAO,EAAE;EAC7C,IAAqBC,eAAe,GAAwBD,OAAO,CAA3DE,WAAW;IAAmBC,OAAO,GAAeH,OAAO,CAA7BG,OAAO;IAAEC,QAAQ,GAAKJ,OAAO,CAApBI,QAAQ;EACvD,IAAMF,WAAW,GAAGD,eAAe,IAAI,CAACE,OAAO;EAC/Cd,eAAe,CAAC,YAAM;IACpB,IAAI,CAACa,WAAW,EACd;IACF,IAAIR,kBAAkB,CAACC,YAAY,CAAC,EAAE;MACpC;IACF;IACA,IAAMC,EAAE,GAAG,CAACQ,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACP,OAAO,KAAKF,YAAY,CAACE,OAAO;IACjF,IAAID,EAAE,EAAE;MACNL,KAAK,CAACK,EAAE,EAAE;QAAES,QAAQ,EAAE;MAAK,CAAC,CAAC;IAC/B;EACF,CAAC,EAAE,CAACH,WAAW,EAAEP,YAAY,EAAES,QAAQ,CAAC,CAAC;AAC3C;AAEA,SACEL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}