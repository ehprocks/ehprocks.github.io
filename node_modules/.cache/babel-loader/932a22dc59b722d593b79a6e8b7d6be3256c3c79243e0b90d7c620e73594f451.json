{"ast":null,"code":"// src/focus-lock.tsx\nimport ReactFocusLock from \"react-focus-lock\";\nimport { getAllFocusable } from \"@chakra-ui/dom-utils\";\nimport { useCallback } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _a;\nvar FocusTrap = (_a = ReactFocusLock.default) != null ? _a : ReactFocusLock;\nvar FocusLock = function FocusLock(props) {\n  var initialFocusRef = props.initialFocusRef,\n    finalFocusRef = props.finalFocusRef,\n    contentRef = props.contentRef,\n    restoreFocus = props.restoreFocus,\n    children = props.children,\n    isDisabled = props.isDisabled,\n    autoFocus = props.autoFocus,\n    persistentFocus = props.persistentFocus,\n    lockFocusAcrossFrames = props.lockFocusAcrossFrames;\n  var onActivation = useCallback(function () {\n    if (initialFocusRef == null ? void 0 : initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (contentRef == null ? void 0 : contentRef.current) {\n      var focusables = getAllFocusable(contentRef.current);\n      if (focusables.length === 0) {\n        requestAnimationFrame(function () {\n          var _a2;\n          (_a2 = contentRef.current) == null ? void 0 : _a2.focus();\n        });\n      }\n    }\n  }, [initialFocusRef, contentRef]);\n  var onDeactivation = useCallback(function () {\n    var _a2;\n    (_a2 = finalFocusRef == null ? void 0 : finalFocusRef.current) == null ? void 0 : _a2.focus();\n  }, [finalFocusRef]);\n  var returnFocus = restoreFocus && !finalFocusRef;\n  return /* @__PURE__ */jsx(FocusTrap, {\n    crossFrame: lockFocusAcrossFrames,\n    persistentFocus: persistentFocus,\n    autoFocus: autoFocus,\n    disabled: isDisabled,\n    onActivation: onActivation,\n    onDeactivation: onDeactivation,\n    returnFocus: returnFocus,\n    children: children\n  });\n};\nFocusLock.displayName = \"FocusLock\";\nvar focus_lock_default = FocusLock;\nexport { FocusLock, focus_lock_default };","map":{"version":3,"names":["ReactFocusLock","getAllFocusable","useCallback","jsx","_a","FocusTrap","default","FocusLock","props","initialFocusRef","finalFocusRef","contentRef","restoreFocus","children","isDisabled","autoFocus","persistentFocus","lockFocusAcrossFrames","onActivation","current","focus","focusables","length","requestAnimationFrame","_a2","onDeactivation","returnFocus","crossFrame","disabled","displayName","focus_lock_default"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/focus-lock/dist/chunk-CG74IXYP.mjs"],"sourcesContent":["// src/focus-lock.tsx\nimport ReactFocusLock from \"react-focus-lock\";\nimport { getAllFocusable } from \"@chakra-ui/dom-utils\";\nimport { useCallback } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _a;\nvar FocusTrap = (_a = ReactFocusLock.default) != null ? _a : ReactFocusLock;\nvar FocusLock = (props) => {\n  const {\n    initialFocusRef,\n    finalFocusRef,\n    contentRef,\n    restoreFocus,\n    children,\n    isDisabled,\n    autoFocus,\n    persistentFocus,\n    lockFocusAcrossFrames\n  } = props;\n  const onActivation = useCallback(() => {\n    if (initialFocusRef == null ? void 0 : initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (contentRef == null ? void 0 : contentRef.current) {\n      const focusables = getAllFocusable(contentRef.current);\n      if (focusables.length === 0) {\n        requestAnimationFrame(() => {\n          var _a2;\n          (_a2 = contentRef.current) == null ? void 0 : _a2.focus();\n        });\n      }\n    }\n  }, [initialFocusRef, contentRef]);\n  const onDeactivation = useCallback(() => {\n    var _a2;\n    (_a2 = finalFocusRef == null ? void 0 : finalFocusRef.current) == null ? void 0 : _a2.focus();\n  }, [finalFocusRef]);\n  const returnFocus = restoreFocus && !finalFocusRef;\n  return /* @__PURE__ */ jsx(\n    FocusTrap,\n    {\n      crossFrame: lockFocusAcrossFrames,\n      persistentFocus,\n      autoFocus,\n      disabled: isDisabled,\n      onActivation,\n      onDeactivation,\n      returnFocus,\n      children\n    }\n  );\n};\nFocusLock.displayName = \"FocusLock\";\nvar focus_lock_default = FocusLock;\n\nexport {\n  FocusLock,\n  focus_lock_default\n};\n"],"mappings":"AAAA;AACA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,GAAG,QAAQ,mBAAmB;AACvC,IAAIC,EAAE;AACN,IAAIC,SAAS,GAAG,CAACD,EAAE,GAAGJ,cAAc,CAACM,OAAO,KAAK,IAAI,GAAGF,EAAE,GAAGJ,cAAc;AAC3E,IAAIO,SAAS,GAAG,SAAZA,SAASA,CAAIC,KAAK,EAAK;EACzB,IACEC,eAAe,GASbD,KAAK,CATPC,eAAe;IACfC,aAAa,GAQXF,KAAK,CARPE,aAAa;IACbC,UAAU,GAORH,KAAK,CAPPG,UAAU;IACVC,YAAY,GAMVJ,KAAK,CANPI,YAAY;IACZC,QAAQ,GAKNL,KAAK,CALPK,QAAQ;IACRC,UAAU,GAIRN,KAAK,CAJPM,UAAU;IACVC,SAAS,GAGPP,KAAK,CAHPO,SAAS;IACTC,eAAe,GAEbR,KAAK,CAFPQ,eAAe;IACfC,qBAAqB,GACnBT,KAAK,CADPS,qBAAqB;EAEvB,IAAMC,YAAY,GAAGhB,WAAW,CAAC,YAAM;IACrC,IAAIO,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACU,OAAO,EAAE;MAC9DV,eAAe,CAACU,OAAO,CAACC,KAAK,EAAE;IACjC,CAAC,MAAM,IAAIT,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACQ,OAAO,EAAE;MAC3D,IAAME,UAAU,GAAGpB,eAAe,CAACU,UAAU,CAACQ,OAAO,CAAC;MACtD,IAAIE,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;QAC3BC,qBAAqB,CAAC,YAAM;UAC1B,IAAIC,GAAG;UACP,CAACA,GAAG,GAAGb,UAAU,CAACQ,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGK,GAAG,CAACJ,KAAK,EAAE;QAC3D,CAAC,CAAC;MACJ;IACF;EACF,CAAC,EAAE,CAACX,eAAe,EAAEE,UAAU,CAAC,CAAC;EACjC,IAAMc,cAAc,GAAGvB,WAAW,CAAC,YAAM;IACvC,IAAIsB,GAAG;IACP,CAACA,GAAG,GAAGd,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACS,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGK,GAAG,CAACJ,KAAK,EAAE;EAC/F,CAAC,EAAE,CAACV,aAAa,CAAC,CAAC;EACnB,IAAMgB,WAAW,GAAGd,YAAY,IAAI,CAACF,aAAa;EAClD,OAAO,eAAgBP,GAAG,CACxBE,SAAS,EACT;IACEsB,UAAU,EAAEV,qBAAqB;IACjCD,eAAe,EAAfA,eAAe;IACfD,SAAS,EAATA,SAAS;IACTa,QAAQ,EAAEd,UAAU;IACpBI,YAAY,EAAZA,YAAY;IACZO,cAAc,EAAdA,cAAc;IACdC,WAAW,EAAXA,WAAW;IACXb,QAAQ,EAARA;EACF,CAAC,CACF;AACH,CAAC;AACDN,SAAS,CAACsB,WAAW,GAAG,WAAW;AACnC,IAAIC,kBAAkB,GAAGvB,SAAS;AAElC,SACEA,SAAS,EACTuB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}