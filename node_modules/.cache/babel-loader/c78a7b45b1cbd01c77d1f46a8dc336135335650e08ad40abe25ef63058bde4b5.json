{"ast":null,"code":"// src/progress.utils.tsx\nimport { keyframes } from \"@chakra-ui/system\";\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nvar spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nvar rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar progress = keyframes({\n  \"0%\": {\n    left: \"-40%\"\n  },\n  \"100%\": {\n    left: \"100%\"\n  }\n});\nvar stripe = keyframes({\n  from: {\n    backgroundPosition: \"1rem 0\"\n  },\n  to: {\n    backgroundPosition: \"0 0\"\n  }\n});\nfunction getProgressProps(options) {\n  var _options$value = options.value,\n    value = _options$value === void 0 ? 0 : _options$value,\n    min = options.min,\n    max = options.max,\n    valueText = options.valueText,\n    getValueText = options.getValueText,\n    isIndeterminate = options.isIndeterminate,\n    _options$role = options.role,\n    role = _options$role === void 0 ? \"progressbar\" : _options$role;\n  var percent = valueToPercent(value, min, max);\n  var getAriaValueText = function getAriaValueText() {\n    if (value == null) return void 0;\n    return typeof getValueText === \"function\" ? getValueText(value, percent) : valueText;\n  };\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : void 0,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? void 0 : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role: role\n    },\n    percent: percent,\n    value: value\n  };\n}\nexport { spin, rotate, progress, stripe, getProgressProps };","map":{"version":3,"names":["keyframes","valueToPercent","value","min","max","spin","strokeDasharray","strokeDashoffset","rotate","transform","progress","left","stripe","from","backgroundPosition","to","getProgressProps","options","_options$value","valueText","getValueText","isIndeterminate","_options$role","role","percent","getAriaValueText","bind"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/progress/dist/chunk-33PGJX5B.mjs"],"sourcesContent":["// src/progress.utils.tsx\nimport { keyframes } from \"@chakra-ui/system\";\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nvar spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nvar rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar progress = keyframes({\n  \"0%\": { left: \"-40%\" },\n  \"100%\": { left: \"100%\" }\n});\nvar stripe = keyframes({\n  from: { backgroundPosition: \"1rem 0\" },\n  to: { backgroundPosition: \"0 0\" }\n});\nfunction getProgressProps(options) {\n  const {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate,\n    role = \"progressbar\"\n  } = options;\n  const percent = valueToPercent(value, min, max);\n  const getAriaValueText = () => {\n    if (value == null)\n      return void 0;\n    return typeof getValueText === \"function\" ? getValueText(value, percent) : valueText;\n  };\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : void 0,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? void 0 : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role\n    },\n    percent,\n    value\n  };\n}\n\nexport {\n  spin,\n  rotate,\n  progress,\n  stripe,\n  getProgressProps\n};\n"],"mappings":"AAAA;AACA,SAASA,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,cAAcA,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAE;EACvC,OAAO,CAACF,KAAK,GAAGC,GAAG,IAAI,GAAG,IAAIC,GAAG,GAAGD,GAAG,CAAC;AAC1C;AACA,IAAIE,IAAI,GAAGL,SAAS,CAAC;EACnB,IAAI,EAAE;IACJM,eAAe,EAAE,QAAQ;IACzBC,gBAAgB,EAAE;EACpB,CAAC;EACD,KAAK,EAAE;IACLD,eAAe,EAAE,UAAU;IAC3BC,gBAAgB,EAAE;EACpB,CAAC;EACD,MAAM,EAAE;IACND,eAAe,EAAE,UAAU;IAC3BC,gBAAgB,EAAE;EACpB;AACF,CAAC,CAAC;AACF,IAAIC,MAAM,GAAGR,SAAS,CAAC;EACrB,IAAI,EAAE;IACJS,SAAS,EAAE;EACb,CAAC;EACD,MAAM,EAAE;IACNA,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AACF,IAAIC,QAAQ,GAAGV,SAAS,CAAC;EACvB,IAAI,EAAE;IAAEW,IAAI,EAAE;EAAO,CAAC;EACtB,MAAM,EAAE;IAAEA,IAAI,EAAE;EAAO;AACzB,CAAC,CAAC;AACF,IAAIC,MAAM,GAAGZ,SAAS,CAAC;EACrBa,IAAI,EAAE;IAAEC,kBAAkB,EAAE;EAAS,CAAC;EACtCC,EAAE,EAAE;IAAED,kBAAkB,EAAE;EAAM;AAClC,CAAC,CAAC;AACF,SAASE,gBAAgBA,CAACC,OAAO,EAAE;EACjC,IAAAC,cAAA,GAQID,OAAO,CAPTf,KAAK;IAALA,KAAK,GAAAgB,cAAA,cAAG,CAAC,GAAAA,cAAA;IACTf,GAAG,GAMDc,OAAO,CANTd,GAAG;IACHC,GAAG,GAKDa,OAAO,CALTb,GAAG;IACHe,SAAS,GAIPF,OAAO,CAJTE,SAAS;IACTC,YAAY,GAGVH,OAAO,CAHTG,YAAY;IACZC,eAAe,GAEbJ,OAAO,CAFTI,eAAe;IAAAC,aAAA,GAEbL,OAAO,CADTM,IAAI;IAAJA,IAAI,GAAAD,aAAA,cAAG,aAAa,GAAAA,aAAA;EAEtB,IAAME,OAAO,GAAGvB,cAAc,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,CAAC;EAC/C,IAAMqB,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B,IAAIvB,KAAK,IAAI,IAAI,EACf,OAAO,KAAK,CAAC;IACf,OAAO,OAAOkB,YAAY,KAAK,UAAU,GAAGA,YAAY,CAAClB,KAAK,EAAEsB,OAAO,CAAC,GAAGL,SAAS;EACtF,CAAC;EACD,OAAO;IACLO,IAAI,EAAE;MACJ,oBAAoB,EAAEL,eAAe,GAAG,EAAE,GAAG,KAAK,CAAC;MACnD,eAAe,EAAEjB,GAAG;MACpB,eAAe,EAAED,GAAG;MACpB,eAAe,EAAEkB,eAAe,GAAG,KAAK,CAAC,GAAGnB,KAAK;MACjD,gBAAgB,EAAEuB,gBAAgB,EAAE;MACpCF,IAAI,EAAJA;IACF,CAAC;IACDC,OAAO,EAAPA,OAAO;IACPtB,KAAK,EAALA;EACF,CAAC;AACH;AAEA,SACEG,IAAI,EACJG,MAAM,EACNE,QAAQ,EACRE,MAAM,EACNI,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}