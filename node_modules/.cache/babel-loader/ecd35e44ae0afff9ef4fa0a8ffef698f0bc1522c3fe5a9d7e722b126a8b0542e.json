{"ast":null,"code":"import _objectSpread from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useId } from \"./chunk-EGV7XMQK.mjs\";\nimport { useControllableProp } from \"./chunk-NUQE4USX.mjs\";\nimport { useCallbackRef } from \"./chunk-TFWETJDV.mjs\";\n\n// src/use-disclosure.ts\nimport { callAllHandlers } from \"@chakra-ui/utils\";\nimport { useCallback, useState } from \"react\";\nfunction useDisclosure() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var onCloseProp = props.onClose,\n    onOpenProp = props.onOpen,\n    isOpenProp = props.isOpen,\n    idProp = props.id;\n  var onOpenPropCallbackRef = useCallbackRef(onOpenProp);\n  var onClosePropCallbackRef = useCallbackRef(onCloseProp);\n  var _useState = useState(props.defaultIsOpen || false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpenState = _useState2[0],\n    setIsOpen = _useState2[1];\n  var _useControllableProp = useControllableProp(isOpenProp, isOpenState),\n    _useControllableProp2 = _slicedToArray(_useControllableProp, 2),\n    isControlled = _useControllableProp2[0],\n    isOpen = _useControllableProp2[1];\n  var id = useId(idProp, \"disclosure\");\n  var onClose = useCallback(function () {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();\n  }, [isControlled, onClosePropCallbackRef]);\n  var onOpen = useCallback(function () {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();\n  }, [isControlled, onOpenPropCallbackRef]);\n  var onToggle = useCallback(function () {\n    var action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    onToggle: onToggle,\n    isControlled: isControlled,\n    getButtonProps: function getButtonProps() {\n      var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _objectSpread(_objectSpread({}, props2), {}, {\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": id,\n        onClick: callAllHandlers(props2.onClick, onToggle)\n      });\n    },\n    getDisclosureProps: function getDisclosureProps() {\n      var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _objectSpread(_objectSpread({}, props2), {}, {\n        hidden: !isOpen,\n        id: id\n      });\n    }\n  };\n}\nexport { useDisclosure };","map":{"version":3,"names":["useId","useControllableProp","useCallbackRef","callAllHandlers","useCallback","useState","useDisclosure","props","arguments","length","undefined","onCloseProp","onClose","onOpenProp","onOpen","isOpenProp","isOpen","idProp","id","onOpenPropCallbackRef","onClosePropCallbackRef","_useState","defaultIsOpen","_useState2","_slicedToArray","isOpenState","setIsOpen","_useControllableProp","_useControllableProp2","isControlled","onToggle","action","getButtonProps","props2","_objectSpread","onClick","getDisclosureProps","hidden"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/hooks/dist/chunk-CHB4ZXZG.mjs"],"sourcesContent":["import {\n  useId\n} from \"./chunk-EGV7XMQK.mjs\";\nimport {\n  useControllableProp\n} from \"./chunk-NUQE4USX.mjs\";\nimport {\n  useCallbackRef\n} from \"./chunk-TFWETJDV.mjs\";\n\n// src/use-disclosure.ts\nimport { callAllHandlers } from \"@chakra-ui/utils\";\nimport { useCallback, useState } from \"react\";\nfunction useDisclosure(props = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const onOpenPropCallbackRef = useCallbackRef(onOpenProp);\n  const onClosePropCallbackRef = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const [isControlled, isOpen] = useControllableProp(isOpenProp, isOpenState);\n  const id = useId(idProp, \"disclosure\");\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();\n  }, [isControlled, onClosePropCallbackRef]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();\n  }, [isControlled, onOpenPropCallbackRef]);\n  const onToggle = useCallback(() => {\n    const action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps: (props2 = {}) => ({\n      ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick: callAllHandlers(props2.onClick, onToggle)\n    }),\n    getDisclosureProps: (props2 = {}) => ({\n      ...props2,\n      hidden: !isOpen,\n      id\n    })\n  };\n}\n\nexport {\n  useDisclosure\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}