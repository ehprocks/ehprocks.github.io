{"ast":null,"code":"import _objectSpread from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { ColorModeContext } from \"./chunk-7NLW6UB6.mjs\";\nimport { getColorModeUtils } from \"./chunk-QTTMAIIW.mjs\";\nimport { localStorageManager } from \"./chunk-BWTZURQV.mjs\";\n\n// src/color-mode-provider.tsx\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar noop = function noop() {};\nfunction getTheme(manager, fallback) {\n  return manager.type === \"cookie\" && manager.ssr ? manager.get(fallback) : fallback;\n}\nfunction ColorModeProvider(props) {\n  var value = props.value,\n    children = props.children,\n    _props$options = props.options,\n    _props$options2 = _props$options === void 0 ? {} : _props$options,\n    useSystemColorMode = _props$options2.useSystemColorMode,\n    initialColorMode = _props$options2.initialColorMode,\n    disableTransitionOnChange = _props$options2.disableTransitionOnChange,\n    _props$colorModeManag = props.colorModeManager,\n    colorModeManager = _props$colorModeManag === void 0 ? localStorageManager : _props$colorModeManag;\n  var defaultColorMode = initialColorMode === \"dark\" ? \"dark\" : \"light\";\n  var _useState = useState(function () {\n      return getTheme(colorModeManager, defaultColorMode);\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    colorMode = _useState2[0],\n    rawSetColorMode = _useState2[1];\n  var _useState3 = useState(function () {\n      return getTheme(colorModeManager);\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    resolvedColorMode = _useState4[0],\n    setResolvedColorMode = _useState4[1];\n  var _useMemo = useMemo(function () {\n      return getColorModeUtils({\n        preventTransition: disableTransitionOnChange\n      });\n    }, [disableTransitionOnChange]),\n    getSystemTheme = _useMemo.getSystemTheme,\n    setClassName = _useMemo.setClassName,\n    setDataset = _useMemo.setDataset,\n    addListener = _useMemo.addListener;\n  var resolvedValue = initialColorMode === \"system\" && !colorMode ? resolvedColorMode : colorMode;\n  var setColorMode = useCallback(function (value2) {\n    var resolved = value2 === \"system\" ? getSystemTheme() : value2;\n    rawSetColorMode(resolved);\n    setClassName(resolved === \"dark\");\n    setDataset(resolved);\n    colorModeManager.set(resolved);\n  }, [colorModeManager, getSystemTheme, setClassName, setDataset]);\n  useSafeLayoutEffect(function () {\n    if (initialColorMode === \"system\") {\n      setResolvedColorMode(getSystemTheme());\n    }\n  }, []);\n  useEffect(function () {\n    var managerValue = colorModeManager.get();\n    if (managerValue) {\n      setColorMode(managerValue);\n      return;\n    }\n    if (initialColorMode === \"system\") {\n      setColorMode(\"system\");\n      return;\n    }\n    setColorMode(defaultColorMode);\n  }, [colorModeManager, defaultColorMode, initialColorMode, setColorMode]);\n  var toggleColorMode = useCallback(function () {\n    setColorMode(resolvedValue === \"dark\" ? \"light\" : \"dark\");\n  }, [resolvedValue, setColorMode]);\n  useEffect(function () {\n    if (!useSystemColorMode) return;\n    return addListener(setColorMode);\n  }, [useSystemColorMode, addListener, setColorMode]);\n  var context = useMemo(function () {\n    return {\n      colorMode: value != null ? value : resolvedValue,\n      toggleColorMode: value ? noop : toggleColorMode,\n      setColorMode: value ? noop : setColorMode,\n      forced: value !== void 0\n    };\n  }, [resolvedValue, toggleColorMode, setColorMode, value]);\n  return /* @__PURE__ */jsx(ColorModeContext.Provider, {\n    value: context,\n    children: children\n  });\n}\nColorModeProvider.displayName = \"ColorModeProvider\";\nfunction DarkMode(props) {\n  var context = useMemo(function () {\n    return {\n      colorMode: \"dark\",\n      toggleColorMode: noop,\n      setColorMode: noop,\n      forced: true\n    };\n  }, []);\n  return /* @__PURE__ */jsx(ColorModeContext.Provider, _objectSpread({\n    value: context\n  }, props));\n}\nDarkMode.displayName = \"DarkMode\";\nfunction LightMode(props) {\n  var context = useMemo(function () {\n    return {\n      colorMode: \"light\",\n      toggleColorMode: noop,\n      setColorMode: noop,\n      forced: true\n    };\n  }, []);\n  return /* @__PURE__ */jsx(ColorModeContext.Provider, _objectSpread({\n    value: context\n  }, props));\n}\nLightMode.displayName = \"LightMode\";\nexport { ColorModeProvider, DarkMode, LightMode };","map":{"version":3,"names":["ColorModeContext","getColorModeUtils","localStorageManager","useSafeLayoutEffect","useCallback","useEffect","useMemo","useState","jsx","noop","getTheme","manager","fallback","type","ssr","get","ColorModeProvider","props","value","children","_props$options","options","_props$options2","useSystemColorMode","initialColorMode","disableTransitionOnChange","_props$colorModeManag","colorModeManager","defaultColorMode","_useState","_useState2","_slicedToArray","colorMode","rawSetColorMode","_useState3","_useState4","resolvedColorMode","setResolvedColorMode","_useMemo","preventTransition","getSystemTheme","setClassName","setDataset","addListener","resolvedValue","setColorMode","value2","resolved","set","managerValue","toggleColorMode","context","forced","Provider","displayName","DarkMode","_objectSpread","LightMode"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/color-mode/dist/chunk-4DEUOPYU.mjs"],"sourcesContent":["import {\n  ColorModeContext\n} from \"./chunk-7NLW6UB6.mjs\";\nimport {\n  getColorModeUtils\n} from \"./chunk-QTTMAIIW.mjs\";\nimport {\n  localStorageManager\n} from \"./chunk-BWTZURQV.mjs\";\n\n// src/color-mode-provider.tsx\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar noop = () => {\n};\nfunction getTheme(manager, fallback) {\n  return manager.type === \"cookie\" && manager.ssr ? manager.get(fallback) : fallback;\n}\nfunction ColorModeProvider(props) {\n  const {\n    value,\n    children,\n    options: {\n      useSystemColorMode,\n      initialColorMode,\n      disableTransitionOnChange\n    } = {},\n    colorModeManager = localStorageManager\n  } = props;\n  const defaultColorMode = initialColorMode === \"dark\" ? \"dark\" : \"light\";\n  const [colorMode, rawSetColorMode] = useState(\n    () => getTheme(colorModeManager, defaultColorMode)\n  );\n  const [resolvedColorMode, setResolvedColorMode] = useState(\n    () => getTheme(colorModeManager)\n  );\n  const { getSystemTheme, setClassName, setDataset, addListener } = useMemo(\n    () => getColorModeUtils({ preventTransition: disableTransitionOnChange }),\n    [disableTransitionOnChange]\n  );\n  const resolvedValue = initialColorMode === \"system\" && !colorMode ? resolvedColorMode : colorMode;\n  const setColorMode = useCallback(\n    (value2) => {\n      const resolved = value2 === \"system\" ? getSystemTheme() : value2;\n      rawSetColorMode(resolved);\n      setClassName(resolved === \"dark\");\n      setDataset(resolved);\n      colorModeManager.set(resolved);\n    },\n    [colorModeManager, getSystemTheme, setClassName, setDataset]\n  );\n  useSafeLayoutEffect(() => {\n    if (initialColorMode === \"system\") {\n      setResolvedColorMode(getSystemTheme());\n    }\n  }, []);\n  useEffect(() => {\n    const managerValue = colorModeManager.get();\n    if (managerValue) {\n      setColorMode(managerValue);\n      return;\n    }\n    if (initialColorMode === \"system\") {\n      setColorMode(\"system\");\n      return;\n    }\n    setColorMode(defaultColorMode);\n  }, [colorModeManager, defaultColorMode, initialColorMode, setColorMode]);\n  const toggleColorMode = useCallback(() => {\n    setColorMode(resolvedValue === \"dark\" ? \"light\" : \"dark\");\n  }, [resolvedValue, setColorMode]);\n  useEffect(() => {\n    if (!useSystemColorMode)\n      return;\n    return addListener(setColorMode);\n  }, [useSystemColorMode, addListener, setColorMode]);\n  const context = useMemo(\n    () => ({\n      colorMode: value != null ? value : resolvedValue,\n      toggleColorMode: value ? noop : toggleColorMode,\n      setColorMode: value ? noop : setColorMode,\n      forced: value !== void 0\n    }),\n    [resolvedValue, toggleColorMode, setColorMode, value]\n  );\n  return /* @__PURE__ */ jsx(ColorModeContext.Provider, { value: context, children });\n}\nColorModeProvider.displayName = \"ColorModeProvider\";\nfunction DarkMode(props) {\n  const context = useMemo(\n    () => ({\n      colorMode: \"dark\",\n      toggleColorMode: noop,\n      setColorMode: noop,\n      forced: true\n    }),\n    []\n  );\n  return /* @__PURE__ */ jsx(ColorModeContext.Provider, { value: context, ...props });\n}\nDarkMode.displayName = \"DarkMode\";\nfunction LightMode(props) {\n  const context = useMemo(\n    () => ({\n      colorMode: \"light\",\n      toggleColorMode: noop,\n      setColorMode: noop,\n      forced: true\n    }),\n    []\n  );\n  return /* @__PURE__ */ jsx(ColorModeContext.Provider, { value: context, ...props });\n}\nLightMode.displayName = \"LightMode\";\n\nexport {\n  ColorModeProvider,\n  DarkMode,\n  LightMode\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}