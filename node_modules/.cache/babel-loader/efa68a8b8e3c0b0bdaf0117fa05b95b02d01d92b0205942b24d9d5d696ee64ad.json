{"ast":null,"code":"import _slicedToArray from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// src/providers.tsx\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport { css, toCSSVar } from \"@chakra-ui/styled-system\";\nimport { memoizedGet as get, runIfFn } from \"@chakra-ui/utils\";\nimport { Global, ThemeProvider as EmotionThemeProvider } from \"@emotion/react\";\nimport { useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nfunction ThemeProvider(props) {\n  var cssVarsRoot = props.cssVarsRoot,\n    theme = props.theme,\n    children = props.children;\n  var computedTheme = useMemo(function () {\n    return toCSSVar(theme);\n  }, [theme]);\n  return /* @__PURE__ */jsxs(EmotionThemeProvider, {\n    theme: computedTheme,\n    children: [/* @__PURE__ */jsx(CSSVars, {\n      root: cssVarsRoot\n    }), children]\n  });\n}\nfunction CSSVars(_ref) {\n  var _ref$root = _ref.root,\n    root = _ref$root === void 0 ? \":host, :root\" : _ref$root;\n  var selector = [root, \"[data-theme]\"].join(\",\");\n  return /* @__PURE__ */jsx(Global, {\n    styles: function styles(theme) {\n      return _defineProperty({}, selector, theme.__cssVars);\n    }\n  });\n}\nvar _createContext = createContext({\n    name: \"StylesContext\",\n    errorMessage: \"useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` \"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  StylesProvider = _createContext2[0],\n  useStyles = _createContext2[1];\nfunction createStylesContext(componentName) {\n  return createContext({\n    name: \"\".concat(componentName, \"StylesContext\"),\n    errorMessage: \"useStyles: \\\"styles\\\" is undefined. Seems you forgot to wrap the components in \\\"<\".concat(componentName, \" />\\\" \")\n  });\n}\nfunction GlobalStyle() {\n  var _useColorMode = useColorMode(),\n    colorMode = _useColorMode.colorMode;\n  return /* @__PURE__ */jsx(Global, {\n    styles: function styles(theme) {\n      var styleObjectOrFn = get(theme, \"styles.global\");\n      var globalStyles = runIfFn(styleObjectOrFn, {\n        theme: theme,\n        colorMode: colorMode\n      });\n      if (!globalStyles) return void 0;\n      var styles = css(globalStyles)(theme);\n      return styles;\n    }\n  });\n}\nexport { ThemeProvider, CSSVars, StylesProvider, useStyles, createStylesContext, GlobalStyle };","map":{"version":3,"names":["useColorMode","createContext","css","toCSSVar","memoizedGet","get","runIfFn","Global","ThemeProvider","EmotionThemeProvider","useMemo","jsx","jsxs","props","cssVarsRoot","theme","children","computedTheme","CSSVars","root","_ref","_ref$root","selector","join","styles","_defineProperty","__cssVars","_createContext","name","errorMessage","_createContext2","_slicedToArray","StylesProvider","useStyles","createStylesContext","componentName","concat","GlobalStyle","_useColorMode","colorMode","styleObjectOrFn","globalStyles"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/system/dist/chunk-3ZTTLJBV.mjs"],"sourcesContent":["// src/providers.tsx\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport { css, toCSSVar } from \"@chakra-ui/styled-system\";\nimport { memoizedGet as get, runIfFn } from \"@chakra-ui/utils\";\nimport {\n  Global,\n  ThemeProvider as EmotionThemeProvider\n} from \"@emotion/react\";\nimport { useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nfunction ThemeProvider(props) {\n  const { cssVarsRoot, theme, children } = props;\n  const computedTheme = useMemo(() => toCSSVar(theme), [theme]);\n  return /* @__PURE__ */ jsxs(EmotionThemeProvider, { theme: computedTheme, children: [\n    /* @__PURE__ */ jsx(CSSVars, { root: cssVarsRoot }),\n    children\n  ] });\n}\nfunction CSSVars({ root = \":host, :root\" }) {\n  const selector = [root, `[data-theme]`].join(\",\");\n  return /* @__PURE__ */ jsx(Global, { styles: (theme) => ({ [selector]: theme.__cssVars }) });\n}\nvar [StylesProvider, useStyles] = createContext({\n  name: \"StylesContext\",\n  errorMessage: \"useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` \"\n});\nfunction createStylesContext(componentName) {\n  return createContext({\n    name: `${componentName}StylesContext`,\n    errorMessage: `useStyles: \"styles\" is undefined. Seems you forgot to wrap the components in \"<${componentName} />\" `\n  });\n}\nfunction GlobalStyle() {\n  const { colorMode } = useColorMode();\n  return /* @__PURE__ */ jsx(\n    Global,\n    {\n      styles: (theme) => {\n        const styleObjectOrFn = get(theme, \"styles.global\");\n        const globalStyles = runIfFn(styleObjectOrFn, { theme, colorMode });\n        if (!globalStyles)\n          return void 0;\n        const styles = css(globalStyles)(theme);\n        return styles;\n      }\n    }\n  );\n}\n\nexport {\n  ThemeProvider,\n  CSSVars,\n  StylesProvider,\n  useStyles,\n  createStylesContext,\n  GlobalStyle\n};\n"],"mappings":";;AAAA;AACA,SAASA,YAAY,QAAQ,uBAAuB;AACpD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,GAAG,EAAEC,QAAQ,QAAQ,0BAA0B;AACxD,SAASC,WAAW,IAAIC,GAAG,EAAEC,OAAO,QAAQ,kBAAkB;AAC9D,SACEC,MAAM,EACNC,aAAa,IAAIC,oBAAoB,QAChC,gBAAgB;AACvB,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,GAAG,EAAEC,IAAI,QAAQ,mBAAmB;AAC7C,SAASJ,aAAaA,CAACK,KAAK,EAAE;EAC5B,IAAQC,WAAW,GAAsBD,KAAK,CAAtCC,WAAW;IAAEC,KAAK,GAAeF,KAAK,CAAzBE,KAAK;IAAEC,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ;EACpC,IAAMC,aAAa,GAAGP,OAAO,CAAC;IAAA,OAAMP,QAAQ,CAACY,KAAK,CAAC;EAAA,GAAE,CAACA,KAAK,CAAC,CAAC;EAC7D,OAAO,eAAgBH,IAAI,CAACH,oBAAoB,EAAE;IAAEM,KAAK,EAAEE,aAAa;IAAED,QAAQ,EAAE,CAClF,eAAgBL,GAAG,CAACO,OAAO,EAAE;MAAEC,IAAI,EAAEL;IAAY,CAAC,CAAC,EACnDE,QAAQ;EACR,CAAC,CAAC;AACN;AACA,SAASE,OAAOA,CAAAE,IAAA,EAA4B;EAAA,IAAAC,SAAA,GAAAD,IAAA,CAAzBD,IAAI;IAAJA,IAAI,GAAAE,SAAA,cAAG,cAAc,GAAAA,SAAA;EACtC,IAAMC,QAAQ,GAAG,CAACH,IAAI,iBAAiB,CAACI,IAAI,CAAC,GAAG,CAAC;EACjD,OAAO,eAAgBZ,GAAG,CAACJ,MAAM,EAAE;IAAEiB,MAAM,EAAE,SAAAA,OAACT,KAAK;MAAA,OAAAU,eAAA,KAASH,QAAQ,EAAGP,KAAK,CAACW,SAAS;IAAA;EAAI,CAAC,CAAC;AAC9F;AACA,IAAAC,cAAA,GAAkC1B,aAAa,CAAC;IAC9C2B,IAAI,EAAE,eAAe;IACrBC,YAAY,EAAE;EAChB,CAAC,CAAC;EAAAC,eAAA,GAAAC,cAAA,CAAAJ,cAAA;EAHGK,cAAc,GAAAF,eAAA;EAAEG,SAAS,GAAAH,eAAA;AAI9B,SAASI,mBAAmBA,CAACC,aAAa,EAAE;EAC1C,OAAOlC,aAAa,CAAC;IACnB2B,IAAI,KAAAQ,MAAA,CAAKD,aAAa,kBAAe;IACrCN,YAAY,uFAAAO,MAAA,CAAoFD,aAAa;EAC/G,CAAC,CAAC;AACJ;AACA,SAASE,WAAWA,CAAA,EAAG;EACrB,IAAAC,aAAA,GAAsBtC,YAAY,EAAE;IAA5BuC,SAAS,GAAAD,aAAA,CAATC,SAAS;EACjB,OAAO,eAAgB5B,GAAG,CACxBJ,MAAM,EACN;IACEiB,MAAM,EAAE,SAAAA,OAACT,KAAK,EAAK;MACjB,IAAMyB,eAAe,GAAGnC,GAAG,CAACU,KAAK,EAAE,eAAe,CAAC;MACnD,IAAM0B,YAAY,GAAGnC,OAAO,CAACkC,eAAe,EAAE;QAAEzB,KAAK,EAALA,KAAK;QAAEwB,SAAS,EAATA;MAAU,CAAC,CAAC;MACnE,IAAI,CAACE,YAAY,EACf,OAAO,KAAK,CAAC;MACf,IAAMjB,MAAM,GAAGtB,GAAG,CAACuC,YAAY,CAAC,CAAC1B,KAAK,CAAC;MACvC,OAAOS,MAAM;IACf;EACF,CAAC,CACF;AACH;AAEA,SACEhB,aAAa,EACbU,OAAO,EACPc,cAAc,EACdC,SAAS,EACTC,mBAAmB,EACnBG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}