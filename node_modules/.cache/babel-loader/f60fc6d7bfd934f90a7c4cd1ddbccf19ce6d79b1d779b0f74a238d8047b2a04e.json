{"ast":null,"code":"import _objectSpread from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"noOfLines\", \"spacing\", \"skeletonHeight\", \"className\", \"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"variant\", \"size\", \"colorScheme\", \"children\"];\nimport { Skeleton } from \"./chunk-3GRGLNAR.mjs\";\n\n// src/skeleton-text.tsx\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction range(count) {\n  return Array(count).fill(1).map(function (_, index) {\n    return index + 1;\n  });\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = function SkeletonText(props) {\n  var _props$noOfLines = props.noOfLines,\n    noOfLines = _props$noOfLines === void 0 ? defaultNoOfLines : _props$noOfLines,\n    _props$spacing = props.spacing,\n    spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n    _props$skeletonHeight = props.skeletonHeight,\n    skeletonHeight = _props$skeletonHeight === void 0 ? \"0.5rem\" : _props$skeletonHeight,\n    className = props.className,\n    startColor = props.startColor,\n    endColor = props.endColor,\n    isLoaded = props.isLoaded,\n    fadeDuration = props.fadeDuration,\n    speed = props.speed,\n    variant = props.variant,\n    size = props.size,\n    colorScheme = props.colorScheme,\n    children = props.children,\n    rest = _objectWithoutProperties(props, _excluded);\n  var noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  var numbers = range(noOfLinesValue);\n  var getWidth = function getWidth(index) {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  var _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    className: _className\n  }, rest), {}, {\n    children: numbers.map(function (number, index) {\n      if (isLoaded && index > 0) {\n        return null;\n      }\n      var sizeProps = isLoaded ? null : {\n        mb: number === numbers.length ? \"0\" : spacing,\n        width: getWidth(number),\n        height: skeletonHeight\n      };\n      return /* @__PURE__ */jsx(Skeleton, _objectSpread(_objectSpread({\n        startColor: startColor,\n        endColor: endColor,\n        isLoaded: isLoaded,\n        fadeDuration: fadeDuration,\n        speed: speed,\n        variant: variant,\n        size: size,\n        colorScheme: colorScheme\n      }, sizeProps), {}, {\n        children: index === 0 ? children : void 0\n      }), numbers.length.toString() + number);\n    })\n  }));\n};\nSkeletonText.displayName = \"SkeletonText\";\nexport { SkeletonText };","map":{"version":3,"names":["Skeleton","useBreakpointValue","chakra","cx","jsx","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","props","_props$noOfLines","noOfLines","_props$spacing","spacing","_props$skeletonHeight","skeletonHeight","className","startColor","endColor","isLoaded","fadeDuration","speed","variant","size","colorScheme","children","rest","_objectWithoutProperties","_excluded","noOfLinesValue","numbers","getWidth","length","_className","div","_objectSpread","number","sizeProps","mb","width","height","toString","displayName"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/skeleton/dist/chunk-QTKSMHLN.mjs"],"sourcesContent":["import {\n  Skeleton\n} from \"./chunk-3GRGLNAR.mjs\";\n\n// src/skeleton-text.tsx\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    variant,\n    size,\n    colorScheme,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(\n    typeof noOfLines === \"number\" ? [noOfLines] : noOfLines\n  ) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = (index) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, children: numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */ jsx(\n      Skeleton,\n      {\n        startColor,\n        endColor,\n        isLoaded,\n        fadeDuration,\n        speed,\n        variant,\n        size,\n        colorScheme,\n        ...sizeProps,\n        children: index === 0 ? children : void 0\n      },\n      numbers.length.toString() + number\n    );\n  }) });\n};\nSkeletonText.displayName = \"SkeletonText\";\n\nexport {\n  SkeletonText\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}