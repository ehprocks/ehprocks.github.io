{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\", \"inputProps\"];\nimport { useCheckboxGroupContext } from \"./chunk-6XFPBTDN.mjs\";\nimport { CheckboxIcon } from \"./chunk-DFEUIRKX.mjs\";\nimport { useCheckbox } from \"./chunk-H6UVDIE7.mjs\";\n\n// src/checkbox.tsx\nimport { chakra, forwardRef, keyframes, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { callAll, cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  var group = useCheckboxGroupContext();\n  var mergedProps = _objectSpread(_objectSpread({}, group), props);\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n  var _ownProps$spacing = ownProps.spacing,\n    spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n    className = ownProps.className,\n    children = ownProps.children,\n    iconColor = ownProps.iconColor,\n    iconSize = ownProps.iconSize,\n    _ownProps$icon = ownProps.icon,\n    icon = _ownProps$icon === void 0 ? /* @__PURE__ */jsx(CheckboxIcon, {}) : _ownProps$icon,\n    isCheckedProp = ownProps.isChecked,\n    _ownProps$isDisabled = ownProps.isDisabled,\n    isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n    onChangeProp = ownProps.onChange,\n    inputProps = ownProps.inputProps,\n    rest = _objectWithoutProperties(ownProps, _excluded);\n  var isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  var onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  var _useCheckbox = useCheckbox(_objectSpread(_objectSpread({}, rest), {}, {\n      isDisabled: isDisabled,\n      isChecked: isChecked,\n      onChange: onChange\n    })),\n    state = _useCheckbox.state,\n    getInputProps = _useCheckbox.getInputProps,\n    getCheckboxProps = _useCheckbox.getCheckboxProps,\n    getLabelProps = _useCheckbox.getLabelProps,\n    getRootProps = _useCheckbox.getRootProps;\n  var iconStyles = useMemo(function () {\n    return _objectSpread({\n      animation: state.isIndeterminate ? \"\".concat(indeterminateOpacityAnim, \" 20ms linear, \").concat(indeterminateScaleAnim, \" 200ms linear\") : \"\".concat(checkAnim, \" 200ms linear\"),\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isIndeterminate, styles.icon]);\n  var clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */jsxs(chakra.label, _objectSpread(_objectSpread({\n    __css: _objectSpread(_objectSpread({}, rootStyles), styles.container),\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), {}, {\n    children: [/* @__PURE__ */jsx(\"input\", _objectSpread({\n      className: \"chakra-checkbox__input\"\n    }, getInputProps(inputProps, ref))), /* @__PURE__ */jsx(chakra.span, _objectSpread(_objectSpread({\n      __css: _objectSpread(_objectSpread({}, controlStyles), styles.control),\n      className: \"chakra-checkbox__control\"\n    }, getCheckboxProps()), {}, {\n      children: clonedIcon\n    })), children && /* @__PURE__ */jsx(chakra.span, _objectSpread(_objectSpread({\n      className: \"chakra-checkbox__label\"\n    }, getLabelProps()), {}, {\n      __css: _objectSpread({\n        marginStart: spacing\n      }, styles.label),\n      children: children\n    }))]\n  }));\n});\nCheckbox.displayName = \"Checkbox\";\nexport { Checkbox };","map":{"version":3,"names":["useCheckboxGroupContext","CheckboxIcon","useCheckbox","chakra","forwardRef","keyframes","omitThemingProps","useMultiStyleConfig","callAll","cx","cloneElement","useMemo","jsx","jsxs","controlStyles","display","alignItems","justifyContent","verticalAlign","userSelect","flexShrink","rootStyles","cursor","position","checkAnim","from","opacity","strokeDashoffset","transform","to","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","Checkbox2","props","ref","group","mergedProps","_objectSpread","styles","ownProps","_ownProps$spacing","spacing","className","children","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","isChecked","_ownProps$isDisabled","isDisabled","onChangeProp","onChange","inputProps","rest","_objectWithoutProperties","_excluded","value","includes","_useCheckbox","state","getInputProps","getCheckboxProps","getLabelProps","getRootProps","iconStyles","animation","isIndeterminate","concat","fontSize","color","clonedIcon","__css","label","container","span","control","marginStart","displayName"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/checkbox/dist/chunk-RVJOM3YK.mjs"],"sourcesContent":["import {\n  useCheckboxGroupContext\n} from \"./chunk-6XFPBTDN.mjs\";\nimport {\n  CheckboxIcon\n} from \"./chunk-DFEUIRKX.mjs\";\nimport {\n  useCheckbox\n} from \"./chunk-H6UVDIE7.mjs\";\n\n// src/checkbox.tsx\nimport {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { callAll, cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group, ...props };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */ jsx(CheckboxIcon, {}),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = useMemo(\n    () => ({\n      animation: state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n      fontSize: iconSize,\n      color: iconColor,\n      ...styles.icon\n    }),\n    [iconColor, iconSize, state.isIndeterminate, styles.icon]\n  );\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      __css: { ...rootStyles, ...styles.container },\n      className: cx(\"chakra-checkbox\", className),\n      ...getRootProps(),\n      children: [\n        /* @__PURE__ */ jsx(\n          \"input\",\n          {\n            className: \"chakra-checkbox__input\",\n            ...getInputProps(inputProps, ref)\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            __css: { ...controlStyles, ...styles.control },\n            className: \"chakra-checkbox__control\",\n            ...getCheckboxProps(),\n            children: clonedIcon\n          }\n        ),\n        children && /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            className: \"chakra-checkbox__label\",\n            ...getLabelProps(),\n            __css: {\n              marginStart: spacing,\n              ...styles.label\n            },\n            children\n          }\n        )\n      ]\n    }\n  );\n});\nCheckbox.displayName = \"Checkbox\";\n\nexport {\n  Checkbox\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}