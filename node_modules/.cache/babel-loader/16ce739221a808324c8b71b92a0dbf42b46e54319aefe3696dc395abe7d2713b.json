{"ast":null,"code":"// src/css-calc.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nfunction toRef(operand) {\n  if (isObject(operand) && operand.reference) {\n    return operand.reference;\n  }\n  return String(operand);\n}\nvar toExpr = function toExpr(operator) {\n  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    operands[_key - 1] = arguments[_key];\n  }\n  return operands.map(toRef).join(\" \".concat(operator, \" \")).replace(/calc/g, \"\");\n};\nvar _add = function add() {\n  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    operands[_key2] = arguments[_key2];\n  }\n  return \"calc(\".concat(toExpr.apply(void 0, [\"+\"].concat(operands)), \")\");\n};\nvar _subtract = function subtract() {\n  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    operands[_key3] = arguments[_key3];\n  }\n  return \"calc(\".concat(toExpr.apply(void 0, [\"-\"].concat(operands)), \")\");\n};\nvar _multiply = function multiply() {\n  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    operands[_key4] = arguments[_key4];\n  }\n  return \"calc(\".concat(toExpr.apply(void 0, [\"*\"].concat(operands)), \")\");\n};\nvar _divide = function divide() {\n  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    operands[_key5] = arguments[_key5];\n  }\n  return \"calc(\".concat(toExpr.apply(void 0, [\"/\"].concat(operands)), \")\");\n};\nvar _negate = function negate(x) {\n  var value = toRef(x);\n  if (value != null && !Number.isNaN(parseFloat(value))) {\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : \"-\".concat(value);\n  }\n  return _multiply(value, -1);\n};\nvar calc = Object.assign(function (x) {\n  return {\n    add: function add() {\n      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        operands[_key6] = arguments[_key6];\n      }\n      return calc(_add.apply(void 0, [x].concat(operands)));\n    },\n    subtract: function subtract() {\n      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        operands[_key7] = arguments[_key7];\n      }\n      return calc(_subtract.apply(void 0, [x].concat(operands)));\n    },\n    multiply: function multiply() {\n      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        operands[_key8] = arguments[_key8];\n      }\n      return calc(_multiply.apply(void 0, [x].concat(operands)));\n    },\n    divide: function divide() {\n      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        operands[_key9] = arguments[_key9];\n      }\n      return calc(_divide.apply(void 0, [x].concat(operands)));\n    },\n    negate: function negate() {\n      return calc(_negate(x));\n    },\n    toString: function toString() {\n      return x.toString();\n    }\n  };\n}, {\n  add: _add,\n  subtract: _subtract,\n  multiply: _multiply,\n  divide: _divide,\n  negate: _negate\n});\nexport { calc };","map":{"version":3,"names":["isObject","toRef","operand","reference","String","toExpr","operator","_len","arguments","length","operands","Array","_key","map","join","concat","replace","add","_len2","_key2","apply","subtract","_len3","_key3","multiply","_len4","_key4","divide","_len5","_key5","negate","x","value","Number","isNaN","parseFloat","startsWith","slice","calc","Object","assign","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","toString"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/theme-tools/dist/chunk-E3OBLH5E.mjs"],"sourcesContent":["// src/css-calc.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nfunction toRef(operand) {\n  if (isObject(operand) && operand.reference) {\n    return operand.reference;\n  }\n  return String(operand);\n}\nvar toExpr = (operator, ...operands) => operands.map(toRef).join(` ${operator} `).replace(/calc/g, \"\");\nvar add = (...operands) => `calc(${toExpr(\"+\", ...operands)})`;\nvar subtract = (...operands) => `calc(${toExpr(\"-\", ...operands)})`;\nvar multiply = (...operands) => `calc(${toExpr(\"*\", ...operands)})`;\nvar divide = (...operands) => `calc(${toExpr(\"/\", ...operands)})`;\nvar negate = (x) => {\n  const value = toRef(x);\n  if (value != null && !Number.isNaN(parseFloat(value))) {\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : `-${value}`;\n  }\n  return multiply(value, -1);\n};\nvar calc = Object.assign(\n  (x) => ({\n    add: (...operands) => calc(add(x, ...operands)),\n    subtract: (...operands) => calc(subtract(x, ...operands)),\n    multiply: (...operands) => calc(multiply(x, ...operands)),\n    divide: (...operands) => calc(divide(x, ...operands)),\n    negate: () => calc(negate(x)),\n    toString: () => x.toString()\n  }),\n  {\n    add,\n    subtract,\n    multiply,\n    divide,\n    negate\n  }\n);\n\nexport {\n  calc\n};\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,KAAKA,CAACC,OAAO,EAAE;EACtB,IAAIF,QAAQ,CAACE,OAAO,CAAC,IAAIA,OAAO,CAACC,SAAS,EAAE;IAC1C,OAAOD,OAAO,CAACC,SAAS;EAC1B;EACA,OAAOC,MAAM,CAACF,OAAO,CAAC;AACxB;AACA,IAAIG,MAAM,GAAG,SAATA,MAAMA,CAAIC,QAAQ;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAKC,QAAQ,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAARF,QAAQ,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAAA,OAAKF,QAAQ,CAACG,GAAG,CAACZ,KAAK,CAAC,CAACa,IAAI,KAAAC,MAAA,CAAKT,QAAQ,OAAI,CAACU,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;AAAA;AACtG,IAAIC,IAAG,GAAG,SAANA,GAAGA,CAAA;EAAA,SAAAC,KAAA,GAAAV,SAAA,CAAAC,MAAA,EAAOC,QAAQ,OAAAC,KAAA,CAAAO,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAART,QAAQ,CAAAS,KAAA,IAAAX,SAAA,CAAAW,KAAA;EAAA;EAAA,eAAAJ,MAAA,CAAaV,MAAM,CAAAe,KAAA,UAAC,GAAG,EAAAL,MAAA,CAAKL,QAAQ,EAAC;AAAA,CAAG;AAC9D,IAAIW,SAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,SAAAC,KAAA,GAAAd,SAAA,CAAAC,MAAA,EAAOC,QAAQ,OAAAC,KAAA,CAAAW,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAARb,QAAQ,CAAAa,KAAA,IAAAf,SAAA,CAAAe,KAAA;EAAA;EAAA,eAAAR,MAAA,CAAaV,MAAM,CAAAe,KAAA,UAAC,GAAG,EAAAL,MAAA,CAAKL,QAAQ,EAAC;AAAA,CAAG;AACnE,IAAIc,SAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,SAAAC,KAAA,GAAAjB,SAAA,CAAAC,MAAA,EAAOC,QAAQ,OAAAC,KAAA,CAAAc,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAARhB,QAAQ,CAAAgB,KAAA,IAAAlB,SAAA,CAAAkB,KAAA;EAAA;EAAA,eAAAX,MAAA,CAAaV,MAAM,CAAAe,KAAA,UAAC,GAAG,EAAAL,MAAA,CAAKL,QAAQ,EAAC;AAAA,CAAG;AACnE,IAAIiB,OAAM,GAAG,SAATA,MAAMA,CAAA;EAAA,SAAAC,KAAA,GAAApB,SAAA,CAAAC,MAAA,EAAOC,QAAQ,OAAAC,KAAA,CAAAiB,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAARnB,QAAQ,CAAAmB,KAAA,IAAArB,SAAA,CAAAqB,KAAA;EAAA;EAAA,eAAAd,MAAA,CAAaV,MAAM,CAAAe,KAAA,UAAC,GAAG,EAAAL,MAAA,CAAKL,QAAQ,EAAC;AAAA,CAAG;AACjE,IAAIoB,OAAM,GAAG,SAATA,MAAMA,CAAIC,CAAC,EAAK;EAClB,IAAMC,KAAK,GAAG/B,KAAK,CAAC8B,CAAC,CAAC;EACtB,IAAIC,KAAK,IAAI,IAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,UAAU,CAACH,KAAK,CAAC,CAAC,EAAE;IACrD,OAAO5B,MAAM,CAAC4B,KAAK,CAAC,CAACI,UAAU,CAAC,GAAG,CAAC,GAAGhC,MAAM,CAAC4B,KAAK,CAAC,CAACK,KAAK,CAAC,CAAC,CAAC,OAAAtB,MAAA,CAAOiB,KAAK,CAAE;EAC7E;EACA,OAAOR,SAAQ,CAACQ,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5B,CAAC;AACD,IAAIM,IAAI,GAAGC,MAAM,CAACC,MAAM,CACtB,UAACT,CAAC;EAAA,OAAM;IACNd,GAAG,EAAE,SAAAA,IAAA;MAAA,SAAAwB,KAAA,GAAAjC,SAAA,CAAAC,MAAA,EAAIC,QAAQ,OAAAC,KAAA,CAAA8B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAARhC,QAAQ,CAAAgC,KAAA,IAAAlC,SAAA,CAAAkC,KAAA;MAAA;MAAA,OAAKJ,IAAI,CAACrB,IAAG,CAAAG,KAAA,UAACW,CAAC,EAAAhB,MAAA,CAAKL,QAAQ,EAAC,CAAC;IAAA;IAC/CW,QAAQ,EAAE,SAAAA,SAAA;MAAA,SAAAsB,KAAA,GAAAnC,SAAA,CAAAC,MAAA,EAAIC,QAAQ,OAAAC,KAAA,CAAAgC,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAARlC,QAAQ,CAAAkC,KAAA,IAAApC,SAAA,CAAAoC,KAAA;MAAA;MAAA,OAAKN,IAAI,CAACjB,SAAQ,CAAAD,KAAA,UAACW,CAAC,EAAAhB,MAAA,CAAKL,QAAQ,EAAC,CAAC;IAAA;IACzDc,QAAQ,EAAE,SAAAA,SAAA;MAAA,SAAAqB,KAAA,GAAArC,SAAA,CAAAC,MAAA,EAAIC,QAAQ,OAAAC,KAAA,CAAAkC,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAARpC,QAAQ,CAAAoC,KAAA,IAAAtC,SAAA,CAAAsC,KAAA;MAAA;MAAA,OAAKR,IAAI,CAACd,SAAQ,CAAAJ,KAAA,UAACW,CAAC,EAAAhB,MAAA,CAAKL,QAAQ,EAAC,CAAC;IAAA;IACzDiB,MAAM,EAAE,SAAAA,OAAA;MAAA,SAAAoB,KAAA,GAAAvC,SAAA,CAAAC,MAAA,EAAIC,QAAQ,OAAAC,KAAA,CAAAoC,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAARtC,QAAQ,CAAAsC,KAAA,IAAAxC,SAAA,CAAAwC,KAAA;MAAA;MAAA,OAAKV,IAAI,CAACX,OAAM,CAAAP,KAAA,UAACW,CAAC,EAAAhB,MAAA,CAAKL,QAAQ,EAAC,CAAC;IAAA;IACrDoB,MAAM,EAAE,SAAAA,OAAA;MAAA,OAAMQ,IAAI,CAACR,OAAM,CAACC,CAAC,CAAC,CAAC;IAAA;IAC7BkB,QAAQ,EAAE,SAAAA,SAAA;MAAA,OAAMlB,CAAC,CAACkB,QAAQ,EAAE;IAAA;EAC9B,CAAC;AAAA,CAAC,EACF;EACEhC,GAAG,EAAHA,IAAG;EACHI,QAAQ,EAARA,SAAQ;EACRG,QAAQ,EAARA,SAAQ;EACRG,MAAM,EAANA,OAAM;EACNG,MAAM,EAANA;AACF,CAAC,CACF;AAED,SACEQ,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}