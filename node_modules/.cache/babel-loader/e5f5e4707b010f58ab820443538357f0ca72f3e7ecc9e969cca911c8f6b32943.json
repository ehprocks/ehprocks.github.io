{"ast":null,"code":"import { usePointerEvent } from \"./chunk-CF2OMLUG.mjs\";\n\n// src/use-focus-on-pointerdown.ts\nimport { contains, detectBrowser, focus, getOwnerDocument, isActiveElement, isRefObject } from \"@chakra-ui/utils\";\nfunction useFocusOnPointerDown(props) {\n  var ref = props.ref,\n    elements = props.elements,\n    enabled = props.enabled;\n  var isSafari = detectBrowser(\"Safari\");\n  var doc = function doc() {\n    return getOwnerDocument(ref.current);\n  };\n  usePointerEvent(doc, \"pointerdown\", function (event) {\n    if (!isSafari || !enabled) return;\n    var target = event.target;\n    var els = elements != null ? elements : [ref];\n    var isValidTarget = els.some(function (elementOrRef) {\n      var el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return contains(el, target);\n    });\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault();\n      focus(target);\n    }\n  });\n}\nexport { useFocusOnPointerDown };","map":{"version":3,"names":["usePointerEvent","contains","detectBrowser","focus","getOwnerDocument","isActiveElement","isRefObject","useFocusOnPointerDown","props","ref","elements","enabled","isSafari","doc","current","event","target","els","isValidTarget","some","elementOrRef","el","preventDefault"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/hooks/dist/chunk-4DMQJ6FO.mjs"],"sourcesContent":["import {\n  usePointerEvent\n} from \"./chunk-CF2OMLUG.mjs\";\n\n// src/use-focus-on-pointerdown.ts\nimport {\n  contains,\n  detectBrowser,\n  focus,\n  getOwnerDocument,\n  isActiveElement,\n  isRefObject\n} from \"@chakra-ui/utils\";\nfunction useFocusOnPointerDown(props) {\n  const { ref, elements, enabled } = props;\n  const isSafari = detectBrowser(\"Safari\");\n  const doc = () => getOwnerDocument(ref.current);\n  usePointerEvent(doc, \"pointerdown\", (event) => {\n    if (!isSafari || !enabled)\n      return;\n    const target = event.target;\n    const els = elements != null ? elements : [ref];\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return contains(el, target);\n    });\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault();\n      focus(target);\n    }\n  });\n}\n\nexport {\n  useFocusOnPointerDown\n};\n"],"mappings":"AAAA,SACEA,eAAe,QACV,sBAAsB;;AAE7B;AACA,SACEC,QAAQ,EACRC,aAAa,EACbC,KAAK,EACLC,gBAAgB,EAChBC,eAAe,EACfC,WAAW,QACN,kBAAkB;AACzB,SAASC,qBAAqBA,CAACC,KAAK,EAAE;EACpC,IAAQC,GAAG,GAAwBD,KAAK,CAAhCC,GAAG;IAAEC,QAAQ,GAAcF,KAAK,CAA3BE,QAAQ;IAAEC,OAAO,GAAKH,KAAK,CAAjBG,OAAO;EAC9B,IAAMC,QAAQ,GAAGV,aAAa,CAAC,QAAQ,CAAC;EACxC,IAAMW,GAAG,GAAG,SAANA,GAAGA,CAAA;IAAA,OAAST,gBAAgB,CAACK,GAAG,CAACK,OAAO,CAAC;EAAA;EAC/Cd,eAAe,CAACa,GAAG,EAAE,aAAa,EAAE,UAACE,KAAK,EAAK;IAC7C,IAAI,CAACH,QAAQ,IAAI,CAACD,OAAO,EACvB;IACF,IAAMK,MAAM,GAAGD,KAAK,CAACC,MAAM;IAC3B,IAAMC,GAAG,GAAGP,QAAQ,IAAI,IAAI,GAAGA,QAAQ,GAAG,CAACD,GAAG,CAAC;IAC/C,IAAMS,aAAa,GAAGD,GAAG,CAACE,IAAI,CAAC,UAACC,YAAY,EAAK;MAC/C,IAAMC,EAAE,GAAGf,WAAW,CAACc,YAAY,CAAC,GAAGA,YAAY,CAACN,OAAO,GAAGM,YAAY;MAC1E,OAAOnB,QAAQ,CAACoB,EAAE,EAAEL,MAAM,CAAC;IAC7B,CAAC,CAAC;IACF,IAAI,CAACX,eAAe,CAACW,MAAM,CAAC,IAAIE,aAAa,EAAE;MAC7CH,KAAK,CAACO,cAAc,EAAE;MACtBnB,KAAK,CAACa,MAAM,CAAC;IACf;EACF,CAAC,CAAC;AACJ;AAEA,SACET,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}