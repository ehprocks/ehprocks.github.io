{"ast":null,"code":"import _objectSpread from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"src\", \"srcSet\", \"name\", \"showBorder\", \"borderRadius\", \"onError\", \"onLoad\", \"getInitials\", \"icon\", \"iconLabel\", \"loading\", \"children\", \"borderColor\", \"ignoreFallback\", \"crossOrigin\"];\nimport { AvatarImage } from \"./chunk-TLFCZAEL.mjs\";\nimport { initials } from \"./chunk-XLTSJSZV.mjs\";\nimport { AvatarStylesProvider } from \"./chunk-QVBG3QXJ.mjs\";\nimport { GenericAvatarIcon } from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar.tsx\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoaded = _useState2[0],\n    setIsLoaded = _useState2[1];\n  var _omitThemingProps = omitThemingProps(props),\n    src = _omitThemingProps.src,\n    srcSet = _omitThemingProps.srcSet,\n    name = _omitThemingProps.name,\n    showBorder = _omitThemingProps.showBorder,\n    _omitThemingProps$bor = _omitThemingProps.borderRadius,\n    borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n    onError = _omitThemingProps.onError,\n    onLoadProp = _omitThemingProps.onLoad,\n    _omitThemingProps$get = _omitThemingProps.getInitials,\n    getInitials = _omitThemingProps$get === void 0 ? initials : _omitThemingProps$get,\n    _omitThemingProps$ico = _omitThemingProps.icon,\n    icon = _omitThemingProps$ico === void 0 ? /* @__PURE__ */jsx(GenericAvatarIcon, {}) : _omitThemingProps$ico,\n    _omitThemingProps$ico2 = _omitThemingProps.iconLabel,\n    iconLabel = _omitThemingProps$ico2 === void 0 ? \" avatar\" : _omitThemingProps$ico2,\n    loading = _omitThemingProps.loading,\n    children = _omitThemingProps.children,\n    borderColor = _omitThemingProps.borderColor,\n    ignoreFallback = _omitThemingProps.ignoreFallback,\n    crossOrigin = _omitThemingProps.crossOrigin,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  var avatarStyles = _objectSpread(_objectSpread({\n    borderRadius: borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0\n  }, baseStyle), styles.container);\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */jsx(chakra.span, _objectSpread(_objectSpread({\n    ref: ref\n  }, rest), {}, {\n    className: cx(\"chakra-avatar\", props.className),\n    \"data-loaded\": dataAttr(isLoaded),\n    __css: avatarStyles,\n    children: /* @__PURE__ */jsxs(AvatarStylesProvider, {\n      value: styles,\n      children: [/* @__PURE__ */jsx(AvatarImage, {\n        src: src,\n        srcSet: srcSet,\n        loading: loading,\n        onLoad: callAllHandlers(onLoadProp, function () {\n          setIsLoaded(true);\n        }),\n        onError: onError,\n        getInitials: getInitials,\n        name: name,\n        borderRadius: borderRadius,\n        icon: icon,\n        iconLabel: iconLabel,\n        ignoreFallback: ignoreFallback,\n        crossOrigin: crossOrigin\n      }), children]\n    })\n  }));\n});\nAvatar.displayName = \"Avatar\";\nexport { baseStyle, Avatar };","map":{"version":3,"names":["AvatarImage","initials","AvatarStylesProvider","GenericAvatarIcon","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","callAllHandlers","cx","dataAttr","useState","jsx","jsxs","baseStyle","display","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","props","ref","styles","_useState","_useState2","_slicedToArray","isLoaded","setIsLoaded","_omitThemingProps","src","srcSet","name","showBorder","_omitThemingProps$bor","borderRadius","onError","onLoadProp","onLoad","_omitThemingProps$get","getInitials","_omitThemingProps$ico","icon","_omitThemingProps$ico2","iconLabel","loading","children","borderColor","ignoreFallback","crossOrigin","rest","_objectWithoutProperties","_excluded","avatarStyles","_objectSpread","borderWidth","container","span","className","__css","value","displayName"],"sources":["C:/Users/Tommaso G/Documents/GitHub/ehprocks.github.io/node_modules/@chakra-ui/avatar/dist/chunk-YYQ66DB3.mjs"],"sourcesContent":["import {\n  AvatarImage\n} from \"./chunk-TLFCZAEL.mjs\";\nimport {\n  initials\n} from \"./chunk-XLTSJSZV.mjs\";\nimport {\n  AvatarStylesProvider\n} from \"./chunk-QVBG3QXJ.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      ...rest,\n      className: cx(\"chakra-avatar\", props.className),\n      \"data-loaded\": dataAttr(isLoaded),\n      __css: avatarStyles,\n      children: /* @__PURE__ */ jsxs(AvatarStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          AvatarImage,\n          {\n            src,\n            srcSet,\n            loading,\n            onLoad: callAllHandlers(onLoadProp, () => {\n              setIsLoaded(true);\n            }),\n            onError,\n            getInitials,\n            name,\n            borderRadius,\n            icon,\n            iconLabel,\n            ignoreFallback,\n            crossOrigin\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nAvatar.displayName = \"Avatar\";\n\nexport {\n  baseStyle,\n  Avatar\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}