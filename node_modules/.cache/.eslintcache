[{"C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\index.tsx":"1","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\reportWebVitals.ts":"2","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\App.tsx":"3","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\Discord.tsx":"4","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\Home.tsx":"5","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\About.tsx":"6","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\Admin.tsx":"7","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\Leaderboard.tsx":"8","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\Resources.tsx":"9","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\Dot.tsx":"10","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\Navigation.tsx":"11","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\LeaderboardTable.tsx":"12","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\Login.tsx":"13"},{"size":573,"mtime":1705080448645,"results":"14","hashOfConfig":"15"},{"size":440,"mtime":1705080448652,"results":"16","hashOfConfig":"15"},{"size":823,"mtime":1705080448565,"results":"17","hashOfConfig":"15"},{"size":4257,"mtime":1705105468836,"results":"18","hashOfConfig":"15"},{"size":6192,"mtime":1705105474319,"results":"19","hashOfConfig":"15"},{"size":9551,"mtime":1705105472522,"results":"20","hashOfConfig":"15"},{"size":4402,"mtime":1705105469837,"results":"21","hashOfConfig":"15"},{"size":4085,"mtime":1705105467439,"results":"22","hashOfConfig":"15"},{"size":13448,"mtime":1705105464915,"results":"23","hashOfConfig":"15"},{"size":1675,"mtime":1705080448568,"results":"24","hashOfConfig":"15"},{"size":2819,"mtime":1705080448572,"results":"25","hashOfConfig":"15"},{"size":1424,"mtime":1705080448570,"results":"26","hashOfConfig":"15"},{"size":1916,"mtime":1705080448570,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xpk4vb",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\index.tsx",[],[],"C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\App.tsx",["74","75"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport About from \"./pages/About\";\r\nimport Discord from \"./pages/Discord\";\r\nimport Resources from \"./pages/Resources\";\r\nimport Leaderboard from \"./pages/Leaderboard\";\r\nimport Admin from \"./pages/Admin\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route index element={<Home />} />\r\n        <Route path=\"about\" element={<About />} />\r\n        <Route path=\"resources\" element={<Resources />} />\r\n        <Route path=\"discord\" element={<Discord />} />\r\n        <Route path=\"leaderboard\" element={<Leaderboard />} />\r\n        <Route path=\"admin\" element={<Admin />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\Discord.tsx",["76","77","78"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Dot from \"../Dot\";\r\nimport \"../App.scss\";\r\nimport logo from \"../ehp_test3.png\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport {\r\n  Stack,\r\n  HStack,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Container,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Navigation from \"../Navigation\";\r\n\r\nfunction Discord() {\r\n  const [dots, setDots] = useState<Array<typeof Dot>>([]);\r\n\r\n  useEffect(() => {\r\n    setDots(Array.from({ length: 40 }, () => Dot));\r\n  }, []);\r\n  return (\r\n    <ChakraProvider>\r\n      <div className=\"App\">\r\n        <Container\r\n          maxW={{ base: \"100%\", md: \"95%\", lg: \"90%\", xl: \"80%\" }}\r\n          className=\"content\"\r\n        >\r\n          <Grid\r\n            templateColumns=\"repeat(10, 1fr)\"\r\n            border=\"0px\"\r\n            borderColor=\"green\"\r\n            gap={4}\r\n            className=\"main\"\r\n          >\r\n            <GridItem\r\n              rowSpan={[8, 8, 12, 12]}\r\n              colSpan={[8, 7, 9, 9]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Link to={\"/\"}>\r\n              <Image width=\"320px\" height=\"80px\" className=\"logo\" src={logo} alt=\"Logo\" />\r\n              </Link>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[8, 8, 12, 12]}\r\n              colStart={9}\r\n              colSpan={[2, 1, 1, 1]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Navigation />\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[5, 5, 6, 8]}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n              className=\"heading\"\r\n            >\r\n              {/* MOBILE FORMATTING */}\r\n              <HStack\r\n                display={{ base: \"flex\", md: \"flex\", lg: \"none\" }}\r\n                spacing={\"20px\"}\r\n              >\r\n                <Heading\r\n                  size={{ base: \"2xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  Discord\r\n                </Heading>\r\n              </HStack>\r\n\r\n              {/* LAPTOP FORMATTING */}\r\n              <HStack\r\n                display={{ base: \"none\", md: \"none\", lg: \"flex\" }}\r\n                spacing={\"30px\"}\r\n              >\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  <div className=\"glitch-container\">\r\n                    <div className=\"glitch\" data-text=\"Discord\">\r\n                      Discord\r\n                    </div>\r\n                  </div>\r\n                </Heading>\r\n              </HStack>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={8}\r\n              colSpan={10}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Stack direction={[\"column\", \"row\"]}>\r\n                <Container>\r\n                  <Heading>\r\n                    Join our Discord for updates, meeting notifications, and\r\n                    cybersecurity discussion!\r\n                  </Heading>\r\n                </Container>\r\n                <Container>\r\n                  <iframe\r\n                    src=\"https://discord.com/widget?id=1050095873834614814&theme=dark\"\r\n                    width={\"100%\"}\r\n                    height={\"500px\"}\r\n                    sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\"\r\n                  ></iframe>\r\n                </Container>\r\n              </Stack>\r\n            </GridItem>\r\n          </Grid>\r\n        </Container>\r\n\r\n        <div\r\n          id=\"dot-wrapper\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"black\",\r\n            zIndex: \"0\",\r\n          }}\r\n        >\r\n          {dots.map((DotComponent, index) => (\r\n            <DotComponent key={index} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default Discord;\r\n","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\Home.tsx",["79","80"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Dot from \"../Dot\";\r\nimport \"../App.scss\";\r\nimport logo from \"../ehp_test3.png\";\r\nimport { Button, ChakraProvider } from \"@chakra-ui/react\";\r\nimport {\r\n  HStack,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Container,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Navigation from \"../Navigation\";\r\n\r\nfunction Home() {\r\n  const [dots, setDots] = useState<Array<typeof Dot>>([]);\r\n\r\n  useEffect(() => {\r\n    setDots(Array.from({ length: 40 }, () => Dot));\r\n  }, []);\r\n  return (\r\n    <ChakraProvider>\r\n      <div className=\"App\">\r\n        <Container\r\n          maxW={{ base: \"100%\", md: \"95%\", lg: \"90%\", xl: \"80%\" }}\r\n          className=\"content\"\r\n        >\r\n          <Grid\r\n            templateColumns=\"repeat(10, 1fr)\"\r\n            border=\"0px dashed\"\r\n            borderColor=\"green\"\r\n            gap={4}\r\n            className=\"main\"\r\n          >\r\n            <GridItem\r\n              rowSpan={12}\r\n              colSpan={[8, 7, 9, 9]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Link to={\"/\"}>\r\n                <Image width=\"320px\" height=\"80px\" className=\"logo\" src={logo} alt=\"Logo\" />\r\n              </Link>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={12}\r\n              colStart={9}\r\n              colSpan={[2, 1, 1, 1]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Navigation />\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={8}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n              className=\"heading\"\r\n            >\r\n              {/* MOBILE FORMATTING */}\r\n              <HStack display={{ base: \"flex\", md: \"flex\", lg: \"none\" }}>\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  Ethical\r\n                </Heading>\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                  color={\"yellowgreen\"}\r\n                >\r\n                  Hackers\r\n                </Heading>\r\n              </HStack>\r\n              <HStack display={{ base: \"flex\", md: \"flex\", lg: \"none\" }}>\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  Of Purdue\r\n                </Heading>\r\n              </HStack>\r\n\r\n              {/* LAPTOP FORMATTING */}\r\n              <HStack display={{ base: \"none\", md: \"none\", lg: \"flex\" }}>\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  Ethical\r\n                </Heading>\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  <div className=\"glitch-container\">\r\n                    <div className=\"glitch\" data-text=\"Hackers\">\r\n                      Hackers\r\n                    </div>\r\n                  </div>\r\n                </Heading>\r\n              </HStack>\r\n              <HStack display={{ base: \"none\", md: \"none\", lg: \"flex\" }}>\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  Of Purdue\r\n                </Heading>\r\n              </HStack>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={4}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <HStack\r\n                className=\"shell\"\r\n                fontSize={{\r\n                  base: \"11px\",\r\n                  sm: \"12px\",\r\n                  md: \"17px\",\r\n                  lg: \"20px\",\r\n                }}\r\n              >\r\n                <h1 className=\"shell\">turtle@ehp:~$ Learn </h1>\r\n                <Typewriter\r\n                  options={{\r\n                    strings: [\r\n                      \"ethical hacking\",\r\n                      \"SQL injection\",\r\n                      \"penetration testing\",\r\n                      \"cross site scripting\",\r\n                      \"command injection\",\r\n                      \"file inclusion\",\r\n                      \"Kali Linux\",\r\n                      \"privilege escalation\",\r\n                      \"active directory\",\r\n                    ],\r\n                    autoStart: true,\r\n                    loop: true,\r\n                    delay: 30,\r\n                    deleteSpeed: 30,\r\n                  }}\r\n                />\r\n              </HStack>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={12}\r\n              colSpan={4}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Link to={\"/discord\"}>\r\n                <Button\r\n                  className=\"button\"\r\n                  fontSize={{ base: \"13px\", md: \"15px\", lg: \"25px\" }}\r\n                  height={{ base: \"35px\", md: \"35px\", lg: \"70px\" }}\r\n                  width={{ base: \"90px\", md: \"90px\", lg: \"180px\" }}\r\n                >\r\n                  Join Us\r\n                </Button>\r\n                <Container hidden>\r\n                  <Link to=\"/admin\"></Link>\r\n                </Container>\r\n              </Link>\r\n            </GridItem>\r\n          </Grid>\r\n        </Container>\r\n\r\n        <div\r\n          id=\"dot-wrapper\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"black\",\r\n            zIndex: \"0\",\r\n          }}\r\n        >\r\n          {dots.map((DotComponent, index) => (\r\n            <DotComponent key={index} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\About.tsx",["81","82","83"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Dot from \"../Dot\";\r\nimport \"../App.scss\";\r\nimport logo from \"../ehp_test3.png\";\r\n\r\nimport { Button, ChakraProvider } from \"@chakra-ui/react\";\r\nimport {\r\n  HStack,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Container,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { FaLaptopCode } from \"react-icons/fa\";\r\nimport { SiHackthebox } from \"react-icons/si\";\r\nimport { Icon } from \"@chakra-ui/react\";\r\nimport { IoMdPeople } from \"react-icons/io\";\r\nimport Navigation from \"../Navigation\";\r\n\r\nfunction About() {\r\n  const [dots, setDots] = useState<Array<typeof Dot>>([]);\r\n\r\n  useEffect(() => {\r\n    setDots(Array.from({ length: 40 }, () => Dot));\r\n  }, []);\r\n  return (\r\n    <ChakraProvider>\r\n      <div className=\"App\">\r\n        <Container\r\n          maxW={{ base: \"95%\", md: \"95%\", lg: \"90%\", xl: \"80%\" }}\r\n          className=\"content\"\r\n        >\r\n          <Grid\r\n            templateColumns=\"repeat(10, 1fr)\"\r\n            border=\"0px\"\r\n            borderColor=\"green\"\r\n            gap={4}\r\n            className=\"main\"\r\n          >\r\n            <GridItem\r\n              rowSpan={[8, 8, 12, 12]}\r\n              colSpan={[8, 7, 9, 9]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Link to={\"/\"}>\r\n              <Image width=\"320px\" height=\"80px\" className=\"logo\" src={logo} alt=\"Logo\" />\r\n              </Link>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[8, 8, 12, 12]}\r\n              colStart={9}\r\n              colSpan={[2, 1, 1, 1]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Navigation />\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[5, 5, 6, 8]}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n              className=\"heading\"\r\n            >\r\n              {/* MOBILE FORMATTING */}\r\n              <HStack\r\n                display={{ base: \"flex\", md: \"flex\", lg: \"none\" }}\r\n                spacing={\"20px\"}\r\n              >\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  About\r\n                </Heading>\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                  color={\"yellowgreen\"}\r\n                >\r\n                  Us\r\n                </Heading>\r\n              </HStack>\r\n\r\n              {/* LAPTOP FORMATTING */}\r\n              <HStack\r\n                display={{ base: \"none\", md: \"none\", lg: \"flex\" }}\r\n                spacing={\"30px\"}\r\n              >\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  About\r\n                </Heading>\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  <div className=\"glitch-container\">\r\n                    <div className=\"glitch\" data-text=\"Us\">\r\n                      Us\r\n                    </div>\r\n                  </div>\r\n                </Heading>\r\n              </HStack>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[1, 22, 22, 22]}\r\n              colSpan={[0, 10, 10, 10]}\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Container centerContent display={{ base: \"none\", sm: \"flex\" }}>\r\n                <Container\r\n                  className=\"box\"\r\n                  height={{\r\n                    base: \"325px\",\r\n                    sm: \"200px\",\r\n                    md: \"280px\",\r\n                    lg: \"280px\",\r\n                    xl: \"280px\",\r\n                  }}\r\n                  width={{\r\n                    base: \"260px\",\r\n                    sm: \"300px\",\r\n                    md: \"600px\",\r\n                    lg: \"600px\",\r\n                  }}\r\n                  fontSize={{ base: \"11px\", md: \"16px\", lg: \"16px\" }}\r\n                >\r\n                  <Container padding={\"20px\"}>\r\n                    <Typewriter\r\n                      options={{\r\n                        autoStart: true,\r\n                        loop: false,\r\n                        delay: 0.5,\r\n                        deleteSpeed: 30,\r\n                      }}\r\n                      onInit={(typewriter) => {\r\n                        typewriter\r\n                          .typeString(\r\n                            \"EHP started as a group of CIT seniors who met weekly to work on HackTheBox machines. Through word of mouth, more students started coming to the meetings, and our unofficial club grew quickly.\"\r\n                          )\r\n                          .start()\r\n                          .pauseFor(1000)\r\n                          .typeString(\r\n                            \"<br /><br /> After months of regular meetings, we decided to become an official club to grow our community, and eventually pass the torch onto the next generation of ethical hackers of Purdue.\"\r\n                          );\r\n                      }}\r\n                    />\r\n                  </Container>\r\n                </Container>\r\n              </Container>\r\n            </GridItem>\r\n\r\n            <GridItem\r\n              rowSpan={30}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Grid\r\n                templateColumns=\"repeat(9, 1fr)\"\r\n                border=\"0px\"\r\n                borderColor=\"green\"\r\n                gap={4}\r\n                className=\"main\"\r\n              >\r\n                <GridItem\r\n                  rowSpan={1}\r\n                  colSpan={[9, 9, 9, 3]}\r\n                  border=\"0px\"\r\n                  borderColor=\"gray.200\"\r\n                >\r\n                  <Container centerContent>\r\n                    <Icon\r\n                      as={FaLaptopCode}\r\n                      boxSize={12}\r\n                      color={\"yellowgreen\"}\r\n                      padding={\"5px\"}\r\n                    />\r\n                    <Container paddingTop={\"20px\"}>\r\n                      <p>\r\n                        We are dedicated to exploring the world of cybersecurity\r\n                        and ethical hacking. EHP is open to anyone who is\r\n                        interested in learning more about this field, regardless\r\n                        of major or skill level.\r\n                      </p>\r\n                    </Container>\r\n                  </Container>\r\n                </GridItem>\r\n                <GridItem\r\n                  rowSpan={1}\r\n                  colSpan={[9, 9, 9, 3]}\r\n                  border=\"0px\"\r\n                  borderColor=\"gray.200\"\r\n                >\r\n                  <Container centerContent>\r\n                    <Icon\r\n                      as={SiHackthebox}\r\n                      boxSize={12}\r\n                      color={\"yellowgreen\"}\r\n                      borderRadius={\"50%\"}\r\n                      padding={\"5px\"}\r\n                    />\r\n                    <Container paddingTop={\"20px\"}>\r\n                      <p style={{ textAlign: \"left\" }}>\r\n                        EHP utilizes pentesting training platforms like\r\n                        HackTheBox and TryHackMe to improve our technical skills\r\n                        in ethical hacking and cybersecurity. These platforms\r\n                        provide realistic virtual environments where we can test\r\n                        our skills by solving challenges from basic to advanced\r\n                        levels.\r\n                      </p>\r\n                    </Container>\r\n                  </Container>\r\n                </GridItem>\r\n                <GridItem\r\n                  rowSpan={1}\r\n                  colSpan={[9, 9, 9, 3]}\r\n                  border=\"0px\"\r\n                  borderColor=\"gray.200\"\r\n                >\r\n                  <Container centerContent>\r\n                    <Icon\r\n                      as={IoMdPeople}\r\n                      boxSize={12}\r\n                      color={\"yellowgreen\"}\r\n                      borderRadius={\"50%\"}\r\n                      padding={\"5px\"}\r\n                    />\r\n                    <Container paddingTop={\"20px\"}>\r\n                      <p>\r\n                        EHP is a community-driven and collaborative club that\r\n                        fosters a supportive and inclusive environment for all\r\n                        members. We encourage members to work together, share\r\n                        their knowledge, and collaborate on challenges.\r\n                      </p>\r\n                    </Container>\r\n                  </Container>\r\n                </GridItem>\r\n              </Grid>\r\n            </GridItem>\r\n          </Grid>\r\n        </Container>\r\n\r\n        <div\r\n          id=\"dot-wrapper\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"black\",\r\n            zIndex: \"0\",\r\n          }}\r\n        >\r\n          {dots.map((DotComponent, index) => (\r\n            <DotComponent key={index} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\Admin.tsx",["84","85","86"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Dot from \"../Dot\";\r\nimport \"../App.scss\";\r\nimport logo from \"../ehp_test3.png\";\r\nimport { Button, ChakraProvider } from \"@chakra-ui/react\";\r\nimport {\r\n  Stack,\r\n  HStack,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Container,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Login from \"../Login\";\r\nimport Navigation from \"../Navigation\";\r\n\r\nfunction Admin() {\r\n  const [dots, setDots] = useState<Array<typeof Dot>>([]);\r\n\r\n  useEffect(() => {\r\n    setDots(Array.from({ length: 20 }, () => Dot));\r\n  }, []);\r\n  return (\r\n    <ChakraProvider>\r\n      <div className=\"App\">\r\n        <Container maxW=\"80%\" className=\"content\">\r\n          <Grid\r\n            templateColumns=\"repeat(10, 1fr)\"\r\n            border=\"0px\"\r\n            borderColor=\"green\"\r\n            gap={4}\r\n            className=\"main\"\r\n          >\r\n            <GridItem\r\n              rowSpan={[8, 8, 12, 12]}\r\n              colSpan={[8, 7, 9, 9]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Link to={\"/\"}>\r\n              <Image width=\"320px\" height=\"80px\" className=\"logo\" src={logo} alt=\"Logo\" />\r\n              </Link>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[8, 8, 12, 12]}\r\n              colStart={9}\r\n              colSpan={[2, 1, 1, 1]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Navigation />\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[5, 5, 6, 8]}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n              className=\"heading\"\r\n            >\r\n              {/* MOBILE FORMATTING */}\r\n              <HStack\r\n                display={{ base: \"flex\", md: \"flex\", lg: \"none\" }}\r\n                spacing={\"20px\"}\r\n              >\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  Admin\r\n                </Heading>\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  Login\r\n                </Heading>\r\n              </HStack>\r\n\r\n              {/* LAPTOP FORMATTING */}\r\n              <HStack\r\n                display={{ base: \"none\", md: \"none\", lg: \"flex\" }}\r\n                spacing={\"30px\"}\r\n              >\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  Admin\r\n                </Heading>\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  <div className=\"glitch-container\">\r\n                    <div className=\"glitch\" data-text=\"Login\">\r\n                      Login\r\n                    </div>\r\n                  </div>\r\n                </Heading>\r\n              </HStack>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={22}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Stack direction={[\"column\", \"row\"]}>\r\n                <Container display={{ base: \"none\", md: \"flex\" }}>\r\n                  <Heading size={{ base: \"lg\" }}>\r\n                    Welcome to the EHP mini-CTF. Your goal is to bypass the\r\n                    login page. Please do not use automated tools or brute-force\r\n                    techniques.\r\n                  </Heading>\r\n                </Container>\r\n                <Container>\r\n                  <Login />\r\n                </Container>\r\n              </Stack>\r\n            </GridItem>\r\n          </Grid>\r\n        </Container>\r\n\r\n        <div\r\n          id=\"dot-wrapper\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"black\",\r\n          }}\r\n        >\r\n          {dots.map((DotComponent, index) => (\r\n            <DotComponent key={index} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\Leaderboard.tsx",["87","88","89"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Dot from \"../Dot\";\r\nimport \"../App.scss\";\r\nimport logo from \"../ehp_test3.png\";\r\nimport { Button, ChakraProvider } from \"@chakra-ui/react\";\r\nimport {\r\n  HStack,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Container,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport LeaderboardTable from \"../LeaderboardTable\";\r\nimport Navigation from \"../Navigation\";\r\n\r\nconst Statistics = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://us-east1-temporal-field-383822.cloudfunctions.net/ethical-hackers/statistics\"\r\n      );\r\n      const json = await response.json();\r\n      console.log(json);\r\n      setData(json);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return <LeaderboardTable data={data} />;\r\n};\r\n\r\nfunction About() {\r\n  const [dots, setDots] = useState<Array<typeof Dot>>([]);\r\n\r\n  useEffect(() => {\r\n    setDots(Array.from({ length: 40 }, () => Dot));\r\n  }, []);\r\n  return (\r\n    <ChakraProvider>\r\n      <div className=\"App\">\r\n        <Container\r\n          maxW={{ base: \"100%\", md: \"95%\", lg: \"90%\", xl: \"80%\" }}\r\n          className=\"content\"\r\n        >\r\n          <Grid\r\n            templateColumns=\"repeat(10, 1fr)\"\r\n            border=\"0px\"\r\n            borderColor=\"green\"\r\n            gap={4}\r\n            className=\"main\"\r\n          >\r\n            <GridItem\r\n              rowSpan={[8, 8, 12, 12]}\r\n              colSpan={[8, 7, 9, 9]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Link to={\"/\"}>\r\n              <Image width=\"320px\" height=\"80px\" className=\"logo\" src={logo} alt=\"Logo\" />\r\n              </Link>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[8, 8, 12, 12]}\r\n              colStart={9}\r\n              colSpan={[2, 1, 1, 1]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Navigation />\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[5, 5, 6, 8]}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n              className=\"heading\"\r\n            >\r\n              {/* MOBILE FORMATTING */}\r\n              <HStack\r\n                display={{ base: \"flex\", md: \"flex\", lg: \"none\" }}\r\n                spacing={\"20px\"}\r\n              >\r\n                <Heading\r\n                  size={{ base: \"2xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  Leaderboard\r\n                </Heading>\r\n              </HStack>\r\n\r\n              {/* LAPTOP FORMATTING */}\r\n              <HStack\r\n                display={{ base: \"none\", md: \"none\", lg: \"flex\" }}\r\n                spacing={\"30px\"}\r\n              >\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  <div className=\"glitch-container\">\r\n                    <div className=\"glitch\" data-text=\"Leaderboard\">\r\n                      Leaderboard\r\n                    </div>\r\n                  </div>\r\n                </Heading>\r\n              </HStack>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={22}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Statistics />\r\n            </GridItem>\r\n          </Grid>\r\n        </Container>\r\n\r\n        <div\r\n          id=\"dot-wrapper\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"black\",\r\n            zIndex: \"0\",\r\n          }}\r\n        >\r\n          {dots.map((DotComponent, index) => (\r\n            <DotComponent key={index} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\pages\\Resources.tsx",["90","91","92"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Dot from \"../Dot\";\r\nimport \"../App.scss\";\r\nimport logo from \"../ehp_test3.png\";\r\nimport { Button, ChakraProvider } from \"@chakra-ui/react\";\r\nimport {\r\n  HStack,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Container,\r\n  Image,\r\n  Table,\r\n  Tbody,\r\n  Tr,\r\n  Td,\r\n} from \"@chakra-ui/react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Navigation from \"../Navigation\";\r\n\r\nfunction Resources() {\r\n  const [dots, setDots] = useState<Array<typeof Dot>>([]);\r\n\r\n  useEffect(() => {\r\n    setDots(Array.from({ length: 40 }, () => Dot));\r\n  }, []);\r\n  return (\r\n    <ChakraProvider>\r\n      <div className=\"App\">\r\n        <Container\r\n          maxW={{ base: \"100%\", md: \"95%\", lg: \"90%\", xl: \"80%\" }}\r\n          className=\"content\"\r\n        >\r\n          <Grid\r\n            templateColumns=\"repeat(10, 1fr)\"\r\n            border=\"0px\"\r\n            borderColor=\"green\"\r\n            gap={4}\r\n            className=\"main\"\r\n          >\r\n            <GridItem\r\n              rowSpan={[8, 8, 12, 12]}\r\n              colSpan={[8, 7, 9, 9]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Link to={\"/\"}>\r\n              <Image width=\"320px\" height=\"80px\" className=\"logo\" src={logo} alt=\"Logo\" />\r\n              </Link>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[8, 8, 12, 12]}\r\n              colStart={9}\r\n              colSpan={[2, 1, 1, 1]}\r\n              border=\"0px dashed\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Navigation />\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={[5, 5, 6, 8]}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n              className=\"heading\"\r\n            >\r\n              {/* MOBILE FORMATTING */}\r\n              <HStack\r\n                display={{ base: \"flex\", md: \"flex\", lg: \"none\" }}\r\n                spacing={\"20px\"}\r\n              >\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"2xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  Resources\r\n                </Heading>\r\n              </HStack>\r\n\r\n              {/* LAPTOP FORMATTING */}\r\n              <HStack\r\n                display={{ base: \"none\", md: \"none\", lg: \"flex\" }}\r\n                spacing={\"30px\"}\r\n              >\r\n                <Heading\r\n                  size={{ base: \"xl\", md: \"xl\", lg: \"4xl\" }}\r\n                  className=\"header\"\r\n                >\r\n                  <div className=\"glitch-container\">\r\n                    <div className=\"glitch\" data-text=\"Resources\">\r\n                      Resources\r\n                    </div>\r\n                  </div>\r\n                </Heading>\r\n              </HStack>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={8}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Heading\r\n                size={{ base: \"sm\", md: \"md\", lg: \"lg\" }}\r\n                className=\"header\"\r\n              >\r\n                Wikipedias, Cheatsheets, and Notes:\r\n              </Heading>\r\n              <Table\r\n                variant=\"simple\"\r\n                fontSize={{ base: \"12px\", md: \"18px\" }}\r\n                size={{ base: \"sm\", md: \"md\" }}\r\n              >\r\n                <Tbody>\r\n                  <Tr>\r\n                    <Td>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://book.hacktricks.xyz/welcome/readme\"\r\n                      >\r\n                        <u>HackTricks</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        Pentesting Wikipedia containing dozens of articles on\r\n                        methodology, attacks, and vulnerabilities, with tons of\r\n                        examples and payloads.\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://github.com/swisskyrepo/PayloadsAllTheThings\"\r\n                      >\r\n                        <u>PayloadsAllTheThings</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        A list of useful payloads and bypasses for Web\r\n                        Application Security.\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://www.ired.team/\"\r\n                      >\r\n                        <u>iRedTeam</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        Collection of red teaming notes and cheatsheets\r\n                        (especially useful for Windows)\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://notes.vulndev.io/wiki/\"\r\n                      >\r\n                        <u>VulnDev</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        Notes from pentests, security reviews, and trainings\r\n                        from xct.\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td w={{ base: \"100%\", sm: \"30%\" }}>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://ppn.snovvcrash.rocks/\"\r\n                      >\r\n                        <u>Pentester's Promiscuous Notebook</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        Snovvcrash's personal GitBook for ethical penetration\r\n                        testing, red teaming, and offensive tooling development.\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                </Tbody>\r\n              </Table>\r\n            </GridItem>\r\n            <GridItem rowSpan={8} colSpan={10}>\r\n              <Heading\r\n                size={{ base: \"sm\", md: \"md\", lg: \"lg\" }}\r\n                className=\"header\"\r\n              >\r\n                Tools:\r\n              </Heading>\r\n              <Table\r\n                variant=\"simple\"\r\n                fontSize={{ base: \"12px\", md: \"18px\" }}\r\n                size={{ base: \"sm\", md: \"md\" }}\r\n              >\r\n                <Tbody>\r\n                  <Tr>\r\n                    <Td w={{ base: \"100%\", sm: \"30%\" }}>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS\"\r\n                      >\r\n                        <u>LinPEAS</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        A Linux privilege escalation script to help you find\r\n                        vulnerabilities on Linux operating systems.\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td w={{ base: \"100%\", sm: \"30%\" }}>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://github.com/jpillora/chisel\"\r\n                      >\r\n                        <u>Chisel</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        Quickly forward ports to access internal applications\r\n                        from your local machine.\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td w={{ base: \"100%\", sm: \"30%\" }}>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://www.revshells.com/\"\r\n                      >\r\n                        <u>Reverse Shells</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        Generate a variety of reverse shells using different\r\n                        programming languages.\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td w={{ base: \"100%\", sm: \"30%\" }}>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://github.com/fortra/impacket\"\r\n                      >\r\n                        <u>Impacket</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        A collection of Python classes for working with network\r\n                        protocols, especially Windows-based protocols such as\r\n                        Kerberos and SMB.\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                </Tbody>\r\n              </Table>\r\n            </GridItem>\r\n            <GridItem\r\n              rowSpan={8}\r\n              colSpan={10}\r\n              border=\"0px\"\r\n              borderColor=\"gray.200\"\r\n            >\r\n              <Heading\r\n                size={{ base: \"sm\", md: \"md\", lg: \"lg\" }}\r\n                className=\"header\"\r\n              >\r\n                Videos and Guides:\r\n              </Heading>\r\n              <Table\r\n                variant=\"simple\"\r\n                fontSize={{ base: \"12px\", md: \"18px\" }}\r\n                size={{ base: \"sm\", md: \"md\" }}\r\n              >\r\n                <Tbody>\r\n                  <Tr>\r\n                    <Td w={{ base: \"100%\", sm: \"30%\" }}>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://0xdf.gitlab.io/\"\r\n                      >\r\n                        <u>0xdf Hacks Stuff</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        Retired HackTheBox walkthroughs.\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Td w={{ base: \"100%\", sm: \"30%\" }}>\r\n                      <a\r\n                        className=\"resource-link\"\r\n                        href=\"https://ippsec.rocks/#\"\r\n                      >\r\n                        <u>Ippsec</u>\r\n                      </a>\r\n                    </Td>\r\n                    <Td>\r\n                      <Container\r\n                        maxW={\"100%\"}\r\n                        display={{ base: \"none\", sm: \"flex\" }}\r\n                      >\r\n                        Search through Ippsec's HTB walkthroughs using keywords.\r\n                      </Container>\r\n                    </Td>\r\n                  </Tr>\r\n                </Tbody>\r\n              </Table>\r\n            </GridItem>\r\n          </Grid>\r\n        </Container>\r\n\r\n        <div\r\n          id=\"dot-wrapper\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"black\",\r\n            zIndex: \"0\",\r\n          }}\r\n        >\r\n          {dots.map((DotComponent, index) => (\r\n            <DotComponent key={index} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default Resources;\r\n","C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\Dot.tsx",[],[],"C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\Navigation.tsx",[],[],"C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\LeaderboardTable.tsx",[],[],"C:\\Users\\Tommaso G\\Documents\\GitHub\\ehprocks.github.io\\src\\Login.tsx",[],[],{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"97","line":1,"column":28,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"98","line":16,"column":27,"nodeType":"95","messageId":"96","endLine":16,"endColumn":33},{"ruleId":"93","severity":1,"message":"99","line":16,"column":35,"nodeType":"95","messageId":"96","endLine":16,"endColumn":40},{"ruleId":"100","severity":1,"message":"101","line":109,"column":19,"nodeType":"102","endLine":114,"endColumn":20},{"ruleId":"93","severity":1,"message":"98","line":15,"column":27,"nodeType":"95","messageId":"96","endLine":15,"endColumn":33},{"ruleId":"93","severity":1,"message":"99","line":15,"column":35,"nodeType":"95","messageId":"96","endLine":15,"endColumn":40},{"ruleId":"93","severity":1,"message":"103","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":16},{"ruleId":"93","severity":1,"message":"98","line":16,"column":27,"nodeType":"95","messageId":"96","endLine":16,"endColumn":33},{"ruleId":"93","severity":1,"message":"99","line":16,"column":35,"nodeType":"95","messageId":"96","endLine":16,"endColumn":40},{"ruleId":"93","severity":1,"message":"103","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},{"ruleId":"93","severity":1,"message":"98","line":15,"column":27,"nodeType":"95","messageId":"96","endLine":15,"endColumn":33},{"ruleId":"93","severity":1,"message":"99","line":15,"column":35,"nodeType":"95","messageId":"96","endLine":15,"endColumn":40},{"ruleId":"93","severity":1,"message":"103","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},{"ruleId":"93","severity":1,"message":"98","line":14,"column":27,"nodeType":"95","messageId":"96","endLine":14,"endColumn":33},{"ruleId":"93","severity":1,"message":"99","line":14,"column":35,"nodeType":"95","messageId":"96","endLine":14,"endColumn":40},{"ruleId":"93","severity":1,"message":"103","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},{"ruleId":"93","severity":1,"message":"98","line":18,"column":27,"nodeType":"95","messageId":"96","endLine":18,"endColumn":33},{"ruleId":"93","severity":1,"message":"99","line":18,"column":35,"nodeType":"95","messageId":"96","endLine":18,"endColumn":40},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Button' is defined but never used."]